{
    "version": "https://jsonfeed.org/version/1",
    "title": "XiaoPeng",
    "subtitle": "lp's blog",
    "icon": "http://yoursite.com/images/favicon.ico",
    "description": "描述123",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/hello-world/",
            "url": "http://yoursite.com/hello-world/",
            "title": "Hello World",
            "date_published": "2024-09-08T06:15:51.021Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "http://yoursite.com/Linux-Learing/Linux-Learning/",
            "url": "http://yoursite.com/Linux-Learing/Linux-Learning/",
            "title": "Linux-Learning",
            "date_published": "2024-09-02T11:54:00.000Z",
            "content_html": "<p>#Linux-Learning</p>\n<h2 id=\"一-使用场景和简介\"><a class=\"anchor\" href=\"#一-使用场景和简介\">#</a> 一、使用场景和简介</h2>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902195701005.png\" alt=\"image-20240902195701005\" style=\"zoom:80%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902195805085.png\" alt=\"image-20240902195805085\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902195840888.png\" alt=\"image-20240902195840888\" style=\"zoom:80%;\" />\n<h3 id=\"1linux系统版本\"><a class=\"anchor\" href=\"#1linux系统版本\">#</a> （1）Linux 系统版本</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902195919759.png\" alt=\"image-20240902195919759\" style=\"zoom:80%;\" />\n<h4 id=\"1发行版\"><a class=\"anchor\" href=\"#1发行版\">#</a> ①发行版</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902200004889.png\" alt=\"image-20240902200004889\" /></p>\n<h2 id=\"二-linux安装\"><a class=\"anchor\" href=\"#二-linux安装\">#</a> 二、Linux 安装</h2>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902200123390.png\" alt=\"image-20240902200123390\" style=\"zoom:80%;\" />\n<h3 id=\"1vmware安装\"><a class=\"anchor\" href=\"#1vmware安装\">#</a> （1）VMware 安装</h3>\n<p>Vmware-17（提取码: ak47）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXViVWVTSklaS1VjYmJhdllGY0FvUEE/cHdkPWFrNDc=\">VMware-workstation-full-17.5.0-22583795 (1).exe</span></p>\n<h3 id=\"2centos镜像\"><a class=\"anchor\" href=\"#2centos镜像\">#</a> （2）Centos 镜像</h3>\n<p>阿里云镜像地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vY2VudG9zLzcvaXNvcy94ODZfNjQv\">centos-7-isos-x86_64 安装包下载_开源镜像站 - 阿里云 (aliyun.com)</span></p>\n<h3 id=\"3finalshell安装\"><a class=\"anchor\" href=\"#3finalshell安装\">#</a> （3）Finalshell 安装</h3>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaG9zdGJ1Zi5jb20vdC85ODguaHRtbA==\">FinalShell SSH 工具，服务器管理，远程桌面加速软件，支持 Windows,macOS,Linux, 版本 4.5.6, 更新日期 2024.8.27 - FinalShell 官网 (hostbuf.com)</span></p>\n<h3 id=\"4vmware-新建虚拟机\"><a class=\"anchor\" href=\"#4vmware-新建虚拟机\">#</a> （4）VMware - 新建虚拟机</h3>\n<h4 id=\"1新建虚拟机\"><a class=\"anchor\" href=\"#1新建虚拟机\">#</a> ①新建虚拟机</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902201503670.png\" alt=\"image-20240902201503670\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902201519139.png\" alt=\"image-20240902201519139\" style=\"zoom: 50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902201608453.png\" alt=\"image-20240902201608453\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902201734214.png\" alt=\"image-20240902201734214\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902201823556.png\" alt=\"image-20240902201823556\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902201924523.png\" alt=\"image-20240902201924523\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902202015174.png\" alt=\"image-20240902202015174\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902202116109.png\" alt=\"image-20240902202116109\" style=\"zoom:50%;\" />\n<h4 id=\"2linux配置\"><a class=\"anchor\" href=\"#2linux配置\">#</a> ②Linux 配置</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902202333425.png\" alt=\"image-20240902202333425\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902202515535.png\" alt=\"image-20240902202515535\" style=\"zoom:50%;\" />\n<p>** 安装过程中，发现不少问题。** 如下图</p>\n<h5 id=\"1网络和主机名\"><a class=\"anchor\" href=\"#1网络和主机名\">#</a> 1）网络和主机名</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902203017800.png\" alt=\"image-20240902203017800\" style=\"zoom: 50%;\" />\n<p>首先，我们点击网络和主机名，进去打开网络。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902202819885.png\" alt=\"image-20240902202819885\" style=\"zoom:50%;\" />\n<p>再点击左上角的完成，退出来可以看到，网络问题已经解决了。</p>\n<h5 id=\"2安装目的地\"><a class=\"anchor\" href=\"#2安装目的地\">#</a> 2）安装目的地</h5>\n<p>然后点击 安装目的地，</p>\n<p>直接点击右上角完成，回到配置页面，可以看到，这个也解决了。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902203332833.png\" alt=\"image-20240902203332833\" style=\"zoom:50%;\" />\n<h5 id=\"3设置root密码\"><a class=\"anchor\" href=\"#3设置root密码\">#</a> 3）设置 Root 密码</h5>\n<p><strong>点击 root 根密码</strong></p>\n<p>设置跟密， 然后点击两次 完成，解决了。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902203521671.png\" alt=\"image-20240902203521671\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902203438126.png\" alt=\"image-20240902203438126\" style=\"zoom:50%;\" />\n<h5 id=\"4设置时区\"><a class=\"anchor\" href=\"#4设置时区\">#</a> 4）设置时区</h5>\n<p>时区为 美洲，我们点开，设置为上海。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902203643057.png\" alt=\"image-20240902203643057\" style=\"zoom:50%;\" />\n<p>时区也配置好了。</p>\n<h5 id=\"5安装配置\"><a class=\"anchor\" href=\"#5安装配置\">#</a> 5）安装配置</h5>\n<p>如果使用本地的 ISO 映像仍然报错，可以考虑切换不同版本的 Centos 映像，也可以通过输入阿里云镜像网址的方式，在线安装。</p>\n<p>阿里云 Centos 下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vY2VudG9zLzcvaXNvcy94ODZfNjQv\">阿里云 Centos 下载地址</span></p>\n<p>阿里云 Centos 镜像站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vY2VudG9zLw==\">阿里云 Centos 镜像站</span></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902204038773.png\" alt=\"image-20240902204038773\" style=\"zoom:50%;\" />\n<h4 id=\"3登录linux\"><a class=\"anchor\" href=\"#3登录linux\">#</a> ③登录 Linux</h4>\n<p>默认用户名为 root，密码为前面设置的 root 密码</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902204551264.png\" alt=\"image-20240902204551264\" style=\"zoom:50%;\" />\n<h4 id=\"4网卡配置\"><a class=\"anchor\" href=\"#4网卡配置\">#</a> ④网卡配置</h4>\n<p><strong>如果之前在 Linux 配置中已经开启了 “网络和主机名” 的网络开关，则可以<mark>直接使用命令：ip addr</mark>，查看 IP 地址</strong>。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902202819885.png\" alt=\"image-20240902202819885\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902205058831.png\" alt=\"image-20240902205058831\" style=\"zoom:67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902204921537.png\" alt=\"image-20240902204921537\" style=\"zoom: 80%;\" />\n<p><strong>配置完成后：</strong></p>\n<p>​\t\t\t\t\t\t<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902205209463.png\" alt=\"image-20240902205209463\" style=\"zoom:80%;\" /></p>\n<h4 id=\"5配置完成\"><a class=\"anchor\" href=\"#5配置完成\">#</a> ⑤配置完成</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902204645575.png\" alt=\"image-20240902204645575\" style=\"zoom: 33%;\" />\n<h2 id=\"三-finalshell远程连接linux服务器\"><a class=\"anchor\" href=\"#三-finalshell远程连接linux服务器\">#</a> 三、FinalShell 远程连接 Linux 服务器</h2>\n<h3 id=\"1安装\"><a class=\"anchor\" href=\"#1安装\">#</a> （1）安装</h3>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaG9zdGJ1Zi5jb20vdC85ODguaHRtbA==\">FinalShell SSH 工具，服务器管理，远程桌面加速软件，支持 Windows,macOS,Linux, 版本 4.5.6, 更新日期 2024.8.27 - FinalShell 官网 (hostbuf.com)</span></p>\n<h3 id=\"2远程连接linux服务器\"><a class=\"anchor\" href=\"#2远程连接linux服务器\">#</a> （2）远程连接 Linux 服务器</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902205532112.png\" alt=\"image-20240902205532112\" style=\"zoom: 67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902205812273.png\" alt=\"image-20240902205812273\" style=\"zoom:50%;\" />\n<h3 id=\"3操作linux服务器\"><a class=\"anchor\" href=\"#3操作linux服务器\">#</a> （3）操作 Linux 服务器</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902205929107.png\" alt=\"image-20240902205929107\" style=\"zoom:50%;\" />\n<h2 id=\"四-linux目录\"><a class=\"anchor\" href=\"#四-linux目录\">#</a> 四、Linux 目录</h2>\n<h3 id=\"1linux和windows目录结构对比\"><a class=\"anchor\" href=\"#1linux和windows目录结构对比\">#</a> （1）Linux 和 Windows 目录结构对比</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902210438334.png\" alt=\"image-20240902210438334\" style=\"zoom: 67%;\" />\n<h3 id=\"2目录介绍\"><a class=\"anchor\" href=\"#2目录介绍\">#</a> （2）目录介绍</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902210531386.png\" alt=\"image-20240902210531386\" style=\"zoom: 67%;\" />\n<ul>\n<li><strong>bin 存放二进制可执行文件</strong></li>\n<li><strong>boot 存放系统引导时使用的各种文件</strong></li>\n<li><strong>dev 存放设备文件</strong></li>\n<li><strong>etc 存放系统配置文件</strong></li>\n<li><strong>home 存放系统用户的文件</strong></li>\n<li><strong>lib 存放程序运行所需的共享库和内核模块</strong></li>\n<li><strong>opt 额外安装的可选应用程序包所放置的位置</strong></li>\n<li><strong>root 超级用户目录</strong></li>\n<li><strong>sbin 存放二进制可执行文件，只有 root 用户才能访问</strong></li>\n<li><strong>tmp 存放临时文件</strong></li>\n<li><strong>usr 存放系统应用程序</strong></li>\n<li><strong>var 存放运行时需要改变数据的文件，例如日志文件</strong></li>\n</ul>\n<h2 id=\"五-linux常用命令\"><a class=\"anchor\" href=\"#五-linux常用命令\">#</a> 五、Linux<mark> 常用命令</mark></h2>\n<h3 id=\"1-linux命令初体验\"><a class=\"anchor\" href=\"#1-linux命令初体验\">#</a> 1、Linux 命令初体验</h3>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902211041543.png\" alt=\"image-20240902211041543\" /></p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902212158686.png\" alt=\"image-20240902212158686\" /></p>\n<h4 id=\"1ls-查看当前目录下的内容\"><a class=\"anchor\" href=\"#1ls-查看当前目录下的内容\">#</a> （1）<mark>ls</mark> - 查看当前目录下的内容</h4>\n<h5 id=\"1ls-l-或者-ll两个l\"><a class=\"anchor\" href=\"#1ls-l-或者-ll两个l\">#</a> ①ls -l 或者 ll (两个 L)</h5>\n<p><strong>表示查看当前目录下的详细内容</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l</span><br><span class=\"line\">ll</span><br></pre></td></tr></table></figure>\n<h4 id=\"2pwd-查看当前所在目录\"><a class=\"anchor\" href=\"#2pwd-查看当前所在目录\">#</a> （2）<mark>pwd</mark> - 查看当前所在目录</h4>\n<h4 id=\"3cd-目录名-切换目录\"><a class=\"anchor\" href=\"#3cd-目录名-切换目录\">#</a> （3）<mark>cd [目录名]</mark> - 切换目录</h4>\n<h4 id=\"4touch-文件名-如果文件不存在新建文件\"><a class=\"anchor\" href=\"#4touch-文件名-如果文件不存在新建文件\">#</a> （4）<mark>touch [文件名]</mark> - 如果文件不存在，新建文件</h4>\n<h4 id=\"5mkdir-目录名-创建目录\"><a class=\"anchor\" href=\"#5mkdir-目录名-创建目录\">#</a> （5）<mark>mkdir [目录名]</mark> - 创建目录</h4>\n<h4 id=\"6rm-文件名目录名-删除指定文件或目录\"><a class=\"anchor\" href=\"#6rm-文件名目录名-删除指定文件或目录\">#</a> （6）<mark>rm [文件名 | 目录名]</mark> - 删除指定文件或目录</h4>\n<h5 id=\"1rm-f-文件名1-文件名2\"><a class=\"anchor\" href=\"#1rm-f-文件名1-文件名2\">#</a> ①rm -f [文件名 1] [文件名 2]</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -f a.txt b.txt  #强制删除多个文件(-f，表示不提示，直接删除)</span><br></pre></td></tr></table></figure>\n<h4 id=\"5echo-内容-filename-追加内容\"><a class=\"anchor\" href=\"#5echo-内容-filename-追加内容\">#</a> （5）<mark>echo 内容 &gt;&gt; filename</mark> - 追加内容</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902220633127.png\" alt=\"image-20240902220633127\" /></p>\n<h3 id=\"2-linux命令使用技巧\"><a class=\"anchor\" href=\"#2-linux命令使用技巧\">#</a> 2、Linux 命令使用技巧</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902212324907.png\" alt=\"image-20240902212324907\" style=\"zoom:50%;\" />\n<h3 id=\"3-linux命令格式\"><a class=\"anchor\" href=\"#3-linux命令格式\">#</a> 3、Linux 命令格式</h3>\n<p><strong>command [-options] [parameter]</strong></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902212453826.png\" alt=\"image-20240902212453826\" style=\"zoom:67%;\" />\n<ul>\n<li><strong>command：命令名</strong></li>\n<li><strong>[-options]：选项，可用来对命令进行控制，也可以省略</strong></li>\n<li><strong>[parameter]：传给命令的参数，可以是零个、一个或者多个</strong></li>\n</ul>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902213117118.png\" alt=\"image-20240902213117118\" style=\"zoom:50%;\" />\n<h3 id=\"4-文件目录操作命令\"><a class=\"anchor\" href=\"#4-文件目录操作命令\">#</a> 4、<mark>文件目录</mark>操作命令</h3>\n<h4 id=\"1ls-显示指定目录下的内容\"><a class=\"anchor\" href=\"#1ls-显示指定目录下的内容\">#</a> （1）<mark>ls</mark> - 显示指定目录下的内容</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902213702171.png\" alt=\"image-20240902213702171\" /><strong> 作用：显示指定目录下的内容</strong><br />\n<strong>语法：<mark>ls [-al] [dir]</mark></strong><br />\n<strong> 说明：</strong></p>\n<ul>\n<li><strong><mark>-a</mark> 显示所有文件及目录 (. 开头的<mark>隐藏文件</mark>也会列出)</strong></li>\n<li><strong><mark>-L</mark> 除文件名称外，同时将文件型态 (<mark>d 表示目录，- 表示文件</mark>)、权限、拥有者、文件大小等信息详细列出</strong></li>\n</ul>\n<p><strong>注意：</strong><br />\n<strong>由于我们使用 ls 命令时经常需要加入 - L 选项，所以 Linux 为 ls-l 命令提供了一种简写方式，即 ll</strong></p>\n<h4 id=\"2cd-用于切换目录\"><a class=\"anchor\" href=\"#2cd-用于切换目录\">#</a> （2）<mark>cd</mark> - 用于切换目录</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902214253369.png\" alt=\"image-20240902214253369\" style=\"zoom: 67%;\" />\n<p><strong>作用：用于切换当前工作目录，即进入指定目录</strong><br />\n<strong>语法：cd [dirName]</strong></p>\n<p><strong>特殊说明：</strong></p>\n<ul>\n<li>\n<p><strong>~ 表示用户的 home 目录 (一个用户可以有多个用户目录)</strong></p>\n</li>\n<li>\n<p><strong>. 表示目前所在的目录</strong></p>\n</li>\n<li>\n<p><strong>.. 表示目前目录位置的上级目录</strong></p>\n</li>\n<li>\n<p><strong>举例:</strong><br />\n<strong><mark>cd ..</mark>  切换到当前目录的上级目录</strong><br />\n<strong><mark> cd ~</mark>  切换到用户的 home 目录</strong><br />\n<strong> cd /usr/local   切换到 /usr/local 目录</strong></p>\n</li>\n</ul>\n<h4 id=\"3cat-用于显示文件内容\"><a class=\"anchor\" href=\"#3cat-用于显示文件内容\">#</a> （3）<mark>cat</mark> - 用于显示文件内容</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902214725283.png\" alt=\"image-20240902214725283\" style=\"zoom:80%;\" />\n<p><strong>作用：用于显示文件内容</strong><br />\n<strong>语法：cat [-n] fileName</strong></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong>-n：由 1 开始对所有输出的行数编号</strong></li>\n</ul>\n<p><strong>举例:</strong></p>\n<ul>\n<li><strong>cat /etc/profile 查看 /etc 目录下的 profile 文件内容</strong></li>\n</ul>\n<h4 id=\"4more-已分页的形式显示文件内容\"><a class=\"anchor\" href=\"#4more-已分页的形式显示文件内容\">#</a> （4）<mark>more</mark> - 已分页的形式显示文件内容</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902215141507.png\" alt=\"image-20240902215141507\" style=\"zoom: 67%;\" />\n<p><strong>作用：以分页的形式显示文件内容</strong><br />\n<strong>语法：morefileName</strong></p>\n<p><strong>操作说明：</strong></p>\n<ul>\n<li><strong>回车键  向下滚动一行</strong></li>\n<li><strong>空格键  向下滚动一屏</strong></li>\n<li><strong>b  返回上一屏</strong></li>\n<li><strong>q 或者 Ctrl+c  退出 more</strong></li>\n</ul>\n<p><strong>举例:</strong><br />\n<strong>more/etc/profile 以分页方式显示 /etc 目录下的 profile 文件内容</strong></p>\n<h4 id=\"5tail-查看文件末尾的内容\"><a class=\"anchor\" href=\"#5tail-查看文件末尾的内容\">#</a> （5）<mark>tail</mark> - 查看文件末尾的内容</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902220125682.png\" alt=\"image-20240902220125682\" style=\"zoom: 67%;\" />\n<p><strong>作用：查看文件末尾的内容</strong></p>\n<p><strong>语法：tail [-f] fileName</strong></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong>-f：<mark>动态读取文件末尾内容并显示</mark>，通常用于<mark>日志文件的内容输出</mark></strong></li>\n</ul>\n<p><strong>举例:</strong></p>\n<ul>\n<li><strong>tail /etc/profile  显示 /etc 目录下的 profile 文件末尾 10 行的内容</strong></li>\n<li><strong>tail-20/etc/profile  显示 /etc 目录下的 profile 文件末尾 20 行的内容</strong></li>\n<li><strong>tail -f /itcast/my.log  动态读取 /itcast 目录下的 my.log 文件末尾内容并显示</strong></li>\n</ul>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902220633127.png\" alt=\"image-20240902220633127\" /></p>\n<h4 id=\"6mkdir-创建目录\"><a class=\"anchor\" href=\"#6mkdir-创建目录\">#</a> （6）<mark>mkdir</mark> - 创建目录</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902221316935.png\" alt=\"image-20240902221316935\" style=\"zoom:67%;\" />\n<p><strong>作用：创建目录</strong></p>\n<p><strong>语法： mkdir [-p] dirName</strong></p>\n<p><strong>说明：</strong></p>\n<p><strong>●==-p==：<mark>确保目录名称存在</mark>，<mark>不存在的就创建一个</mark>。通过此选项，可以实现<mark>多层目录同时创建</mark></strong></p>\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong>mkdiritcast 在当前目录下，建立一个名为 itcast 的子目录</strong></li>\n<li><strong>mkdi r-p itcast/test 在工作目录下的 itcast 目录中建立一个名为 test 的<mark>子目录</mark>，若 itcast 目录不存在，则建立一个</strong></li>\n</ul>\n<h4 id=\"7rmdir-删除空目录\"><a class=\"anchor\" href=\"#7rmdir-删除空目录\">#</a> （7）<mark>rmdir</mark> - 删除空目录</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902221703167.png\" alt=\"image-20240902221703167\" style=\"zoom: 67%;\" />\n<p><strong>作用：删除<mark>空目录</mark></strong></p>\n<p><strong>语法：rmdir [-p] dirName</strong></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong>-p：<mark>当子目录被删除后使父目录为空目录的话，则一并删除</mark></strong></li>\n</ul>\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong>rmdir itcast 删除名为 itcast 的空目录</strong></li>\n<li><strong>rmdir -p itcast/test 删除 itcast 目录中名为 test 的子目录，若 test 目录删除后 itcast 目录变为<mark>空目录</mark>，则也被删除</strong></li>\n<li><em><em>rmdir ==itcast</em>== <mark>删除名称以 itcast 开始的空目录</mark></em> *</li>\n</ul>\n<h4 id=\"8rm-删除文件或者目录\"><a class=\"anchor\" href=\"#8rm-删除文件或者目录\">#</a> （8）<mark>rm</mark> - 删除文件或者目录</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902222907472.png\" alt=\"image-20240902222907472\" style=\"zoom:67%;\" />\n<p><strong>作用：删除文件或者目录</strong></p>\n<p><strong>语法：rm [-rf] name</strong></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong>-r：将目录及目录中所有文件（目录）逐一删除，即<mark>递归删除</mark></strong></li>\n<li><strong>-f：<mark>无需确认，直接删除</mark></strong></li>\n</ul>\n<p><strong>举例:</strong></p>\n<ul>\n<li><strong>rm -r itcast / 删除名为 itcast 的目录和<mark>目录中所有文件</mark>，删除前需确认</strong></li>\n<li><strong>rm <mark>-rf</mark> itcast / 无需确认，直接删除名为 itcast 的目录和<mark>目录中所有文件</mark></strong></li>\n<li><strong>rm -f hello.txt 无需确认，直接删除 hello.txt 文件</strong></li>\n</ul>\n<h3 id=\"5-拷贝移动命令\"><a class=\"anchor\" href=\"#5-拷贝移动命令\">#</a> 5、<mark>拷贝移动</mark>命令</h3>\n<h4 id=\"1cp-用于复制文件或目录\"><a class=\"anchor\" href=\"#1cp-用于复制文件或目录\">#</a> （1）<mark>cp</mark> - 用于复制文件或目录</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902223403607.png\" alt=\"image-20240902223403607\" style=\"zoom:80%;\" />\n<p><strong>作用：用于复制文件或目录</strong></p>\n<p><strong>语法：cp [-r] source dest</strong></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong><mark>-r</mark>：如果复制的是<mark>目录</mark>需要使用此选项，此时将<mark>复制该目录下所有的子目录和文件</mark></strong></li>\n</ul>\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong>cp hello.txt itcast/  将 hello.txt 复制到 itcast 目录中</strong></li>\n<li><strong>cp hello.txt <mark>./<mark>hi.txt  将 hello.txt 复制到</mark>当前目录</mark>，并<mark>改名</mark>为 hi.txt (==./== 表示当前目录)</strong></li>\n<li><strong>cp -r itcast/./itheima/  将<mark> itcast 目录</mark>和目录下<mark>所有文件</mark>复制到 itheima 目录下</strong></li>\n<li><strong>cp -r <mark>itcast/*</mark> ./itheima/  将 itcast 目录下<mark>所有文件</mark>复制到 itheima 目录下（<mark>只复制所有文件</mark>）</strong></li>\n</ul>\n<h4 id=\"2mv-为文件或目录改名-或将文件或目录移动到其他位置\"><a class=\"anchor\" href=\"#2mv-为文件或目录改名-或将文件或目录移动到其他位置\">#</a> （2）<mark>mv</mark> - 为文件或目录改名、或将文件或目录移动到其他位置</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240902224412506.png\" alt=\"image-20240902224412506\" style=\"zoom: 80%;\" />\n<p><strong>作用：为文件或目录改名、或将文件或目录移动到其它位置</strong></p>\n<p><strong>语法：<mark>mv source dest</mark></strong></p>\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong>mv hello.txt hi.txt  将 hello.txt<mark> 改名</mark>为 hi.txt</strong></li>\n<li><strong>mv hi.txt itheima==/== 将文件 hi.txt<mark> 移动</mark>到 itheima<mark> 目录</mark>中</strong></li>\n<li><strong>mv hi.txt itheima/hello.txt   将 hi.txt<mark> 移动</mark>到 itheima 目录中，<mark>并改名</mark>为 hello.txt</strong></li>\n<li><strong>mv itcast/itheima/  如果 itheima 目录<mark>不存在</mark>，将 itcast 目录<mark>改名</mark>为 itheima</strong></li>\n<li><strong>mv itcast/itheima/  如果 itheima 目录<mark>存在</mark>，将 itcast 目录<mark>移动</mark>到 itheima 目录中</strong></li>\n</ul>\n<h3 id=\"6-打包压缩命令-tar\"><a class=\"anchor\" href=\"#6-打包压缩命令-tar\">#</a> 6、<mark>打包压缩</mark>命令 tar</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903154954958.png\" alt=\"image-20240903154954958\" style=\"zoom: 80%;\" />\n<h4 id=\"1tar基础命令\"><a class=\"anchor\" href=\"#1tar基础命令\">#</a> （1）tar 基础命令</h4>\n<p><strong>作用：对文件进行<mark>打包、解包、压缩、解压</mark></strong></p>\n<p><strong>语法：tar [-zcxvf] fileName [files]</strong></p>\n<p>​\t<strong>tar [-zcxvf] <mark>fileName (打 / 解包后的文件名带上后缀)</mark> [<mark>files (目标文件或目录)</mark>]</strong></p>\n<ul>\n<li><strong>包文件后缀为 ==.tar<mark> 表示只是完成了</mark>打包 ==，并没有压缩</strong></li>\n<li><strong>包文件后缀为 ==.tar.gz<mark> 表示</mark>打包<mark>的同时还进行了</mark>压缩 ==</strong></li>\n</ul>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong><mark>-z</mark>：z 代表的是 gzip，通过 gzip 命令处理文件，gzip 可以对文件<mark>压缩</mark>或者<mark>解压</mark></strong></li>\n<li><strong><mark>-c</mark>：c 代表的是 create，即创建<mark>新的包文件</mark>   (<mark>打包</mark>)</strong></li>\n<li><strong><mark>-x</mark>：x 代表的是 extract，实现<mark>从包文件中还原文件</mark>   （<mark>解包</mark>）</strong></li>\n<li><strong><mark>-v</mark>: v 代表的是 verbose，显示<mark>命令的执行过程</mark></strong></li>\n<li><strong><mark>-f</mark>：f 代表的是 file，用于指定<mark>包文件的名称</mark></strong></li>\n</ul>\n<h4 id=\"2案例\"><a class=\"anchor\" href=\"#2案例\">#</a> （2）案例</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903163658595.png\" alt=\"image-20240903163658595\" style=\"zoom: 80%;\" />\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong><mark>-czvf</mark>：表示对文件<mark>打包并压缩</mark>（并展示命令执行过程、指定打包后的包文件名称），tar -czvf test/newFile.tar.gz itcast，将 itcast 文件 (目录) 打包到 test 目录下，并为打包后的包文件指定名称 (后缀为.tar.gz)</strong></li>\n<li><strong><mark>-cvf</mark>: 表示对文件<mark>打包</mark>（并展示命令执行过程、指定打包后的包文件名称），tar -cvf newName.tar itcast</strong></li>\n<li><strong><mark>-xvf</mark>:  表示对包文件进行<mark>解包</mark>， tar -xvf test.tar</strong></li>\n<li><strong><mark>-xzvf</mark>:  表示对包文件进行<mark>解包并解压</mark>，tar -xzvf example.tar.gz</strong></li>\n<li><strong><mark>-C</mark>：表示<mark>指定</mark>解压后的文件所在<mark>目录</mark>，tar -zxvf hello.tar.gz <mark>-C</mark> /usr/local</strong></li>\n</ul>\n<h4 id=\"3解压缩到指定目录\"><a class=\"anchor\" href=\"#3解压缩到指定目录\">#</a> （3）解压缩到<mark>指定目录</mark></h4>\n<p><strong>解包并解压文件 (目录) 到<mark>指定目录</mark>，并<mark>更改解压后的名字</mark></strong></p>\n<h5 id=\"1法一-c\"><a class=\"anchor\" href=\"#1法一-c\">#</a> ①法一：<mark>-C</mark>,</h5>\n<ul>\n<li>\n<p><strong><mark>-C</mark>：表示<mark>指定</mark>解压后的文件所在<mark>目录</mark>，tar -zxvf hello.tar.gz <mark>-C</mark> /usr/local</strong></p>\n<ul>\n<li><strong>tar -xzvf newFile.tar.gz <mark>-C ./004</mark> --transform's/itcast/ 黑马目录 /'</strong></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2法二-directory\"><a class=\"anchor\" href=\"#2法二-directory\">#</a> ②法二：<mark>--directory</mark></h5>\n<hr />\n<ul>\n<li><strong>tar <mark>-xzvf</mark> newFile.tar.gz <mark>--directory</mark> / 指定目录 <mark>--transform</mark> '==s/== 旧文件名 / 新文件名 /'</strong></li>\n</ul>\n<p><strong>假设你有一个压缩文件  <code>example.tar.gz</code> ，其中包含一个文件  <code>file1.txt</code> ，你希望将  <code>file1.txt</code>  解压缩到  <code>/home/user/target_directory/</code>  目录，并且将解压缩后的文件重命名为  <code>newfile.txt</code> 。你可以使用以下步骤：</strong></p>\n<ol>\n<li>\n<p><strong>解压缩到指定目录，并重命名文件：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf example.tar.gz --directory /home/user/target_directory/ --transform <span class=\"string\">&#x27;s/file1.txt/newfile.txt/&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><strong>解释</strong>：</p>\n<ul>\n<li><code>-x</code> ：表示解压缩。</li>\n<li><code>-z</code> ：表示解压缩  <code>.gz</code>  格式的文件。</li>\n<li><code>-v</code> ：表示在解压缩过程中显示详细信息。</li>\n<li><code>-f</code> ：表示指定要操作的文件。</li>\n<li><code>--directory /home/user/target_directory/</code> ：<mark>指定解压缩的目标目录</mark>。</li>\n<li><code>--transform 's/file1.txt/newfile.txt/'</code> ：<mark>用来修改解压缩后的文件名</mark>，其中  <code>file1.txt</code>  是压缩包中的原文件名， <code>newfile.txt</code>  是解压缩后的新文件名。</li>\n</ul>\n<p><strong>结果：</strong></p>\n<p>经过上述命令后， <code>file1.txt</code>  将被解压缩到  <code>/home/user/target_directory/</code>  目录，并且文件名会被修改为  <code>newfile.txt</code> 。</p>\n</li>\n</ol>\n<p>如果压缩包中有多个文件或目录，你可以使用正则表达式来处理更多文件的重命名。根据需要调整  <code>--transform</code>  参数中的规则。</p>\n<h3 id=\"7-文本编辑命令-vivim\"><a class=\"anchor\" href=\"#7-文本编辑命令-vivim\">#</a> 7、文本编辑命令 vi/<mark>vim</mark></h3>\n<h4 id=\"1vim的安装\"><a class=\"anchor\" href=\"#1vim的安装\">#</a> （1）Vim 的安装</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903164943505.png\" alt=\"image-20240903164943505\" style=\"zoom:80%;\" />\n<p><strong>作用：vi 命令是 Linux 系统提供的一个文本编辑工具，可以对文件内容进行编辑，类似于 Windows 中的记事本</strong></p>\n<p><strong>语法：vi fileName</strong></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong>1、vim 是从 vi 发展来的一个功能更加强大的文本编辑工具，在编辑文件时可以对文本内容进行着色，方便我们对文件进行编辑处理，所以实际工作中 vim 更加常用。</strong></li>\n<li><strong>2、要使用 vim 命令，需要我们自己完成安装。可以使用下面的命令来完成安装：<mark>yum install vim</mark></strong></li>\n</ul>\n<h4 id=\"1yum命令错误\"><a class=\"anchor\" href=\"#1yum命令错误\">#</a> （1）yum 命令错误</h4>\n<h5 id=\"centos7执行yum命令遇到could-not-resolve-host-mirrorlistcentosorg-未知的错误如何解决\"><a class=\"anchor\" href=\"#centos7执行yum命令遇到could-not-resolve-host-mirrorlistcentosorg-未知的错误如何解决\">#</a> <strong>CentOS7 执行 yum 命令遇到 “Could not resolve host: <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcmxpc3QuY2VudG9zLm9yZw==\">mirrorlist.centos.org</span>； 未知的错误” 如何解决</strong></h5>\n<p><strong>原因是国内网络不能访问外网。所以需要将 mirrorlist.centos.org 替换为国内可以访问的镜像源。</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>\n<p><strong>然后再清除 yum 缓存</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br></pre></td></tr></table></figure>\n<p><strong>然后重新生成缓存</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<h4 id=\"2vim的编辑模式\"><a class=\"anchor\" href=\"#2vim的编辑模式\">#</a> （2）Vim 的编辑模式</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903165246777.png\" alt=\"image-20240903165246777\" /></p>\n<p><strong>说明：</strong></p>\n<ul>\n<li><strong>1、在使用 vim 命令编辑文件时，如果指定的文件<mark>存在</mark>则<mark>直接打开此文件</mark>。如果指定的文件<mark>不存在则新建文件</mark>。</strong></li>\n<li><strong>2、vim 在进行文本编辑时共分为三种模式，分别是<mark>命令模式（Command mode）</mark>，<mark>插入模式（Insert mode）<mark>和</mark>底行模式（Lastlinemode）</mark>。这三种模式之间可以相互切换。我们在使用 vim 时一定要注意我们当前所处的是哪种模式。</strong></li>\n</ul>\n<h5 id=\"1命令模式\"><a class=\"anchor\" href=\"#1命令模式\">#</a> ①命令模式</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903165706113.png\" alt=\"image-20240903165706113\" style=\"zoom: 80%;\" />\n<ul>\n<li><strong>命令模式下可以查看文件内容、移动光标（<mark>上下左右箭头、gg、G</mark>）</strong>\n<ul>\n<li><strong>gg，快速回到文件开头</strong></li>\n<li><strong>G，快速回到文件末尾</strong></li>\n</ul>\n</li>\n<li><strong>通过 vim 命令打开文件后，<mark>默认进入命令模式</mark></strong></li>\n<li><strong>另外两种模式需要首先进入命令模式，才能进入彼此，即必须<mark>通过命令模式进行转换</mark>其他两种模式</strong></li>\n</ul>\n<h5 id=\"2插入模式-使用i\"><a class=\"anchor\" href=\"#2插入模式-使用i\">#</a> ②插入模式 - 使用<mark> i</mark></h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903170042837.png\" alt=\"image-20240903170042837\" style=\"zoom: 80%;\" />\n<ul>\n<li><strong>插入模式下可以对文件内容进行<mark>编辑</mark></strong></li>\n<li><strong>在命令模式下按下 ==[i,a,o]<mark> 任意一个，可以进入插入模式。进入插入模式后，下方会出现</mark>【insert】== 字样</strong></li>\n<li><strong>在插入模式下按下<mark> ESC 键</mark>，回到<mark>命令模式</mark>，</strong>\n<ul>\n<li><strong><mark>通过命令模式在进入底行模式</mark>，在<mark>底行模式中进行保存或退出</mark></strong></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"3底行模式-使用\"><a class=\"anchor\" href=\"#3底行模式-使用\">#</a> ③底行模式 - 使用 ==:==</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903170256703.png\" alt=\"image-20240903170256703\" style=\"zoom:80%;\" />\n<ul>\n<li><strong>底行模式下可以通过命令对文件内容进行<mark>查找、显示行号、退出</mark>等操作</strong></li>\n<li><strong>在命令模式下按下 [<mark>:</mark>  和  <mark>/</mark>] 任意一个，可以进入底行模式</strong></li>\n<li><strong>通过 ==/ 方式<mark>进入底行模式后，可以对文件内容进行</mark>查找 ==</strong></li>\n<li><strong>通过 ==: 方式<mark>进入底行模式后，可以输入</mark> wq（保存并退出）==、<mark>q！（不保存退出）</mark>、<mark>Set nu（显示行号）</mark></strong></li>\n</ul>\n<h3 id=\"8-查找命令-find-grep\"><a class=\"anchor\" href=\"#8-查找命令-find-grep\">#</a> 8、<mark>查找</mark>命令 find、grep</h3>\n<h4 id=\"1find-查找文件\"><a class=\"anchor\" href=\"#1find-查找文件\">#</a> （1）find - 查找文件</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903194033911.png\" alt=\"image-20240903194033911\" style=\"zoom:80%;\" />\n<p><strong>作用：在指定目录下<mark>查找文件</mark></strong></p>\n<p><strong>语法：find dirName -option fileName</strong></p>\n<p><strong>举例:</strong></p>\n<ul>\n<li><strong>find <mark>.</mark> <mark>-name</mark> &quot;*.java&quot;  (其中 <mark>.</mark> 表示在当前目录下寻找 ) , 在当前目录及其子目录下查找.java 结尾文件</strong></li>\n<li><strong>find /itcast -name &quot;*.java&quot;  在 /itcast 目录及其子目录下查找.java 结尾的文件</strong></li>\n</ul>\n<h4 id=\"2grep-查找指定文件中的内容\"><a class=\"anchor\" href=\"#2grep-查找指定文件中的内容\">#</a> （2）grep - 查找指定文件中的内容</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903194825578.png\" alt=\"image-20240903194825578\" style=\"zoom:80%;\" />\n<p><strong>作用：从指定文件中查找指定的文本内容</strong></p>\n<p><strong>语法：grep word fileName</strong></p>\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong>grep Hello HelloWorld.java  查找 HelloWorld.java 文件中出现的 Hello 字符串的位置</strong></li>\n<li>*<em>grep hello <em>.java  查找当前目录中所有 ==.java 结尾 == 的文件中包含 hello 字符串的位置</em></em></li>\n</ul>\n<h3 id=\"9-linux-进程\"><a class=\"anchor\" href=\"#9-linux-进程\">#</a> 9、Linux-<mark> 进程</mark></h3>\n<h4 id=\"1查看进程命令-ps\"><a class=\"anchor\" href=\"#1查看进程命令-ps\">#</a> （1）<mark>查看进程</mark>命令 - ps</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903203523949.png\" alt=\"image-20240903203523949\" style=\"zoom:80%;\" />\n<p><strong>查看进程  ps -ef | grep [进程名称]</strong></p>\n<p><strong>注意：</strong></p>\n<ul>\n<li><strong>ps 命令是 linux 下非常强大的进程查看命令，通过<mark> ps -ef</mark> 可以查看<mark>当前运行的所有进程的详细信息</mark></strong></li>\n<li><strong>&quot;<mark>|</mark>” 在 Linux 中称为<mark>管道符</mark>，可以将<mark>前一个命令的结果</mark>输出给<mark>后一个命令</mark>作为<mark>输入</mark></strong></li>\n<li><strong>使用 ps 命令查看进程时，经常配合管道符和查找命令<mark> grep</mark> 一起使用，来查看<mark>特定进程</mark></strong></li>\n</ul>\n<p><strong>举例：</strong></p>\n<ul>\n<li><strong>查看 Tomcat 的进程：ps-ef| grep tomcat</strong></li>\n</ul>\n<h4 id=\"2停止进程-kill\"><a class=\"anchor\" href=\"#2停止进程-kill\">#</a> （2）停止进程 - kill</h4>\n<p><strong>结束 Tomcat 进程</strong></p>\n<ul>\n<li><strong>查看 Tomcat 进程，获得进程 id</strong></li>\n</ul>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903205517146.png\" alt=\"image-20240903205517146\" /></p>\n<ul>\n<li>执行命令结束进程<strong> kill -9 进程号</strong></li>\n</ul>\n<h5 id=\"注意\"><a class=\"anchor\" href=\"#注意\">#</a> 注意：</h5>\n<p><strong>kill 命令是 Linux 提供的用于<mark>结束进程</mark>的命令，<mark>-9 表示强制结束</mark></strong></p>\n<h5 id=\"案例-停止tomcat服务\"><a class=\"anchor\" href=\"#案例-停止tomcat服务\">#</a> 案例 - 停止 Tomcat 服务</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903205110258.png\" alt=\"image-20240903205110258\" style=\"zoom:80%;\" />\n<p>停止 Tomcat 服务的方式：</p>\n<h5 id=\"1法一\"><a class=\"anchor\" href=\"#1法一\">#</a> ①法一：</h5>\n<p>运行 Tomcat 的<strong> bin 目录</strong>中提供的<strong>停止服务的脚本文件</strong> <strong><span class=\"exturl\" data-url=\"aHR0cDovL3NodXRkb3duLnNo\">shutdown.sh</span></strong></p>\n<ul>\n<li>\n<p>执行命令：</p>\n<ul>\n<li>\n<p><mark>sh</mark> <span class=\"exturl\" data-url=\"aHR0cDovL3NodXRkb3duLnNo\">shutdown.sh</span></p>\n</li>\n<li>\n<p>./shutdown.sh</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2法二\"><a class=\"anchor\" href=\"#2法二\">#</a> ②法二：</h5>\n<p><strong>结束 Tomcat 进程</strong></p>\n<ul>\n<li><strong>查看 Tomcat 进程，获得进程 id</strong></li>\n</ul>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903205517146.png\" alt=\"image-20240903205517146\" /></p>\n<ul>\n<li>执行命令结束进程<strong> kill -9 进程号</strong></li>\n</ul>\n<h5 id=\"注意-2\"><a class=\"anchor\" href=\"#注意-2\">#</a> 注意：</h5>\n<p><strong>kill 命令是 Linux 提供的用于<mark>结束进程</mark>的命令，<mark>-9 表示强制结束</mark></strong></p>\n<h3 id=\"10-linux防火墙操作\"><a class=\"anchor\" href=\"#10-linux防火墙操作\">#</a> 10、Linux<mark> 防火墙</mark>操作</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903204133750.png\" alt=\"image-20240903204133750\" style=\"zoom:80%;\" />\n<ul>\n<li>\n<p><strong>查看防火墙状态 (systemctl status firewalld 或  firewall-cmd --state)</strong></p>\n</li>\n<li>\n<p><strong>暂时关闭防火墙 (systemctl stop firewalld)</strong></p>\n</li>\n<li>\n<p><strong>永久关闭防火墙 (systemctl disable firewalld)</strong></p>\n</li>\n<li>\n<p><strong>开启防火墙 (systemctl start firewalld)</strong></p>\n</li>\n<li>\n<p><strong><mark>开放指定</mark>端口 (firewall-cmd --zone=public --add-port=8080/tcp --permanent)</strong></p>\n</li>\n<li>\n<p><strong>关闭指定端口 (firewall-cmd --zone=public --remove-port=8080/tcp --permanent)</strong></p>\n</li>\n<li>\n<p><strong><mark>立即生效</mark> (firewall-cmd --reload)，<mark>开放或者关闭端口后</mark>需要执行立即生效命令</strong></p>\n</li>\n<li>\n<p><strong>查看开放的端口 (firewall-cmd --zone=public --list-ports)</strong></p>\n</li>\n</ul>\n<p><strong>注意：</strong></p>\n<ul>\n<li><strong>1、<mark>Systemct</mark>l 是管理 Linux 中<mark>服务</mark>的命令，可以对服务进行启动、停止、重启、查看状态等操作</strong></li>\n<li><strong>2、firewall-cmd 是 Linux 中专门用于<mark>控制防火墙</mark>的命令</strong></li>\n<li><strong>3、为了保证系统安全，服务器的防火墙<mark>不建议关闭</mark>，只需开放指定的端口就行，例如 Tomcat 就可以开发 8080 端口，Mysql 数据库开放 3306 端口</strong></li>\n</ul>\n<h3 id=\"11-linux-服务\"><a class=\"anchor\" href=\"#11-linux-服务\">#</a> 11、Linux-<mark> 服务</mark></h3>\n<ul>\n<li><strong>systemctl status [服务名]</strong></li>\n<li><strong>systemctl start [服务名]</strong></li>\n<li><strong>systemctl enable mysqld 开机启动 mysql 服务</strong></li>\n<li><strong><mark>netstat-tunlp</mark>  查看已经启动的服务（使用 netstat 命令，需要提前导入 yum install net-tools）</strong></li>\n</ul>\n<h4 id=\"1案例-启动mysql服务mysqld\"><a class=\"anchor\" href=\"#1案例-启动mysql服务mysqld\">#</a> （1）案例 - 启动 mysql 服务 mysqld</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903222056415.png\" alt=\"image-20240903222056415\" /></p>\n<ul>\n<li><strong>systemctl status mysqld  查看 mysql 服务状态</strong></li>\n<li><strong>systemctl start mysqld  启动 mysql 服务</strong></li>\n</ul>\n<p><strong>说明：</strong></p>\n<p><strong>可以设置开机时启动 mysql 服务，避免每次开机启动 mysql</strong></p>\n<ul>\n<li><strong>systemctl enable mysqld 开机启动 mysql 服务</strong></li>\n</ul>\n<p><strong>前提：使用 netstat 命令，需要提前导入 yum install net-tools</strong></p>\n<ul>\n<li><strong><mark>netstat-tunlp</mark>  查看已经启动的服务</strong></li>\n<li><strong>netstat-tunlp|grep mysql</strong></li>\n<li><strong>ps -ef|grep mysql  查看 mysql 进程</strong></li>\n</ul>\n<h3 id=\"12-yum-软件包管理器\"><a class=\"anchor\" href=\"#12-yum-软件包管理器\">#</a> 12、Yum - 软件包管理器</h3>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903231118165.png\" alt=\"image-20240903231118165\" /></p>\n<h3 id=\"13-nohup-挂起进程\"><a class=\"anchor\" href=\"#13-nohup-挂起进程\">#</a> 13、<mark>nohup</mark> - 挂起进程</h3>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232154494.png\" alt=\"image-20240903232154494\" /></p>\n<p><strong>改为后台运行 SpringBoot 程序，并将日志输出到日志文件</strong></p>\n<p><strong>目前程序运行的问题</strong></p>\n<ul>\n<li><strong>线上程序不会采用控制台霸屏的形式运行程序，而是将程序在后台运行</strong></li>\n<li><strong>线上程序不会将日志输出到控制台，而是输出到日志文件，方便运维查阅信息</strong></li>\n</ul>\n<p><strong>nohup 命令：英文全称 nohangup（不挂起），用于不挂断地运行指定命令，退出终端不会影响程序的运行</strong></p>\n<p><strong>语法格式：nohup Command [Arg...] [&amp;]</strong></p>\n<p><strong>参数说明：</strong></p>\n<ul>\n<li><strong>Command：要执行的命令</strong></li>\n<li><strong>Arg：一些参数，可以指定输出文件</strong></li>\n<li><strong>&amp;：让命令在后台运行</strong></li>\n</ul>\n<p><strong>举例：hello.log 为日志文件</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup java -jar springboot工程.jar &amp;&gt; hello.log &amp;</span><br></pre></td></tr></table></figure>\n<p><strong>nohup java -jar boot 工程.jar &amp;&gt;hello.log&amp; 后台运行 java-jar 命令，并将日志输出到 hello.log 文件</strong></p>\n<h2 id=\"六-软件安装\"><a class=\"anchor\" href=\"#六-软件安装\">#</a> 六、软件安装</h2>\n<h3 id=\"1-软件安装方式\"><a class=\"anchor\" href=\"#1-软件安装方式\">#</a> 1、软件安装方式</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903195459504.png\" alt=\"image-20240903195459504\" style=\"zoom:80%;\" />\n<ul>\n<li><strong>二进制发布包安装</strong>\n<ul>\n<li><strong>软件已经针对具体平台编译打包发布，只要解压，修改配置即可</strong></li>\n</ul>\n</li>\n<li><strong>rpm 安装</strong>\n<ul>\n<li><strong>软件已经按照 redhat (红帽) 的包管理规范进行打包，使用 rpm 命令进行安装，不能自行解决库依赖问题 (无法实现依赖传递)</strong></li>\n</ul>\n</li>\n<li><strong>yum 安装</strong>\n<ul>\n<li><strong>一种在线软件安装方式 (需要联网)，本质上还是 rpm 安装，自动下载安装包并安装，安装过程中自动解决库依赖问题</strong></li>\n</ul>\n</li>\n<li><strong>源码编译安装</strong>\n<ul>\n<li><strong>软件以源码工程的形式发布，需要自己编译打包</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-使用finalshell快捷上传文件\"><a class=\"anchor\" href=\"#2-使用finalshell快捷上传文件\">#</a> 2、使用 finalshell 快捷上传文件</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903203350331.png\" alt=\"image-20240903203350331\" style=\"zoom:80%;\" />\n<h3 id=\"3-jdk安装\"><a class=\"anchor\" href=\"#3-jdk安装\">#</a> 3、JDK 安装</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903200007788.png\" alt=\"image-20240903200007788\" style=\"zoom: 80%;\" />\n<h3 id=\"4-tomcat安装\"><a class=\"anchor\" href=\"#4-tomcat安装\">#</a> 4、Tomcat 安装</h3>\n<h4 id=\"1安装tomcat\"><a class=\"anchor\" href=\"#1安装tomcat\">#</a> （1）安装 Tomcat</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903203230683.png\" alt=\"image-20240903203230683\" /></p>\n<h4 id=\"2验证tomcat是否启动成功\"><a class=\"anchor\" href=\"#2验证tomcat是否启动成功\">#</a> （2）验证 Tomcat 是否启动成功</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903203523949.png\" alt=\"image-20240903203523949\" style=\"zoom:80%;\" />\n<h4 id=\"3防火墙操作\"><a class=\"anchor\" href=\"#3防火墙操作\">#</a> （3）防火墙操作</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903205020340.png\" alt=\"image-20240903205020340\" style=\"zoom:67%;\" />\n<h4 id=\"4停止tomcat服务\"><a class=\"anchor\" href=\"#4停止tomcat服务\">#</a> （4）停止 Tomcat 服务</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903205110258.png\" alt=\"image-20240903205110258\" style=\"zoom:80%;\" />\n<p>停止 Tomcat 服务的方式：</p>\n<h5 id=\"1法一-脚本文件\"><a class=\"anchor\" href=\"#1法一-脚本文件\">#</a> ①法一 - 脚本文件</h5>\n<p>运行 Tomcat 的<strong> bin 目录</strong>中提供的<strong>停止服务的脚本文件</strong> <strong><span class=\"exturl\" data-url=\"aHR0cDovL3NodXRkb3duLnNo\">shutdown.sh</span></strong></p>\n<ul>\n<li>\n<p>执行命令：</p>\n<ul>\n<li>\n<p><mark>sh</mark> <span class=\"exturl\" data-url=\"aHR0cDovL3NodXRkb3duLnNo\">shutdown.sh</span></p>\n</li>\n<li>\n<p>./shutdown.sh</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2法二结束进程\"><a class=\"anchor\" href=\"#2法二结束进程\">#</a> ②法二：结束进程</h5>\n<p><strong>结束 Tomcat 进程</strong></p>\n<ul>\n<li><strong>查看 Tomcat 进程，获得进程 id</strong></li>\n</ul>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903205517146.png\" alt=\"image-20240903205517146\" /></p>\n<ul>\n<li>执行命令结束进程<strong> kill -9 进程号</strong></li>\n</ul>\n<p><strong>注意</strong></p>\n<ul>\n<li><strong>kill 命令是 Linux 提供的用于<mark>结束进程</mark>的命令，<mark>-9 表示强制结束</mark></strong></li>\n</ul>\n<h3 id=\"5-mysql安装\"><a class=\"anchor\" href=\"#5-mysql安装\">#</a> 5、MySQL 安装</h3>\n<h4 id=\"1安装mysql\"><a class=\"anchor\" href=\"#1安装mysql\">#</a> （1）安装 MySQL</h4>\n<h5 id=\"1检测当前系统中是否安装mysql数据库\"><a class=\"anchor\" href=\"#1检测当前系统中是否安装mysql数据库\">#</a> ①检测当前系统中是否安装 MySQL 数据库</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903211304120.png\" alt=\"image-20240903211304120\" style=\"zoom: 67%;\" />\n<ul>\n<li>\n<p><strong>rpm -qa  查询当前系统中安装的所有软件</strong></p>\n</li>\n<li>\n<p><strong>rpm -qa| grep mysql  查询当前系统中安装的名称带 mysql 的软件</strong></p>\n</li>\n<li>\n<p><strong>rpm -qa| grep mariadb  查询当前系统中安装的名称带 mariadb 的软件</strong></p>\n</li>\n</ul>\n<p>RPM（Red-HatPackageManager）<strong>RPM 软件包管理器</strong>，是红帽 Linux 用于管理和安装软件的工具</p>\n<p>注意事项</p>\n<ul>\n<li>如果当前系统中已经安装有 MySQL 数据库，安装将失败。CentOS7<strong> 自带 mariadb</strong>，与 MySQL 数据库冲突，需要删除 mariadb，才能安装 Mysql</li>\n</ul>\n<h5 id=\"2卸载已经安装的冲突软件\"><a class=\"anchor\" href=\"#2卸载已经安装的冲突软件\">#</a> ②卸载已经安装的冲突软件</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903212159427.png\" alt=\"image-20240903212159427\" style=\"zoom: 80%;\" />\n<p><strong>卸载软件</strong></p>\n<ul>\n<li><strong>rpm -e --nodeps 软件名称</strong></li>\n<li><strong>rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64</strong></li>\n</ul>\n<h5 id=\"3将资料中提供的mysql安装包上传到linux并解压\"><a class=\"anchor\" href=\"#3将资料中提供的mysql安装包上传到linux并解压\">#</a> ③将资料中提供的 MySQL 安装包上传到 Linux 并解压</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903212318417.png\" alt=\"image-20240903212318417\" style=\"zoom:80%;\" />\n<ul>\n<li><strong>mkdir</strong> /usr/local/mysql</li>\n<li>tar <strong>-zxvf</strong> mysql-5.7.25-1.el7.x86_64.rpm-bundle.tar.gz <strong>-C</strong> /usr/local/mysql</li>\n</ul>\n<h5 id=\"4按照顺序安装rpm软件包\"><a class=\"anchor\" href=\"#4按照顺序安装rpm软件包\">#</a> ④按照顺序安装 rpm 软件包</h5>\n<p><strong>root 用户用 <mark>yum localinstall *.rpm</mark> ，一次性安装<mark>所有软件包</mark>，不需要考虑顺序问题</strong></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903212429479.png\" alt=\"image-20240903212429479\" style=\"zoom:80%;\" />\n<ul>\n<li>\n<p><strong>rpm-ivhmysql-community-common-5.7.25-1.el7.x86_64.rpm</strong></p>\n</li>\n<li>\n<p><strong>rpm -ivh mysql-community-libs-5.7.25-1.el7.x86_64.rpm</strong></p>\n</li>\n<li>\n<p><strong>rpm -ivh mysql-community-devel-5.7.25-1.el7.x86_64.rpm</strong></p>\n</li>\n<li>\n<p><strong>rpm-ivh mysql-community-libs-compat-5.7.25-1.el7.x86_64.rpm</strong></p>\n</li>\n<li>\n<p><strong>rpm -ivh mysql-community-client-5.7.25-1.el7.x86_64.rpm</strong></p>\n</li>\n<li>\n<p><strong>yum install net-tools</strong></p>\n</li>\n<li>\n<p><strong>rpm -ivh mysql-community-server-5.7.25-1.el7.x86_64.rpm</strong></p>\n</li>\n<li>\n<p><strong>说明 1：安装过程中提示缺少 net-tools 依赖，使用 yum 安装</strong></p>\n</li>\n<li>\n<p><strong>说明 2：可以通过指令升级现有软件及系统内核</strong></p>\n<ul>\n<li><strong>yum update</strong></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2启动mysql服务\"><a class=\"anchor\" href=\"#2启动mysql服务\">#</a> （2）启动 MySQL 服务</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903222056415.png\" alt=\"image-20240903222056415\" /></p>\n<ul>\n<li><strong>systemctl status mysqld  查看 mysql 服务状态</strong></li>\n<li><strong>systemctl <mark>start mysqld</mark>  启动 mysql 服务</strong></li>\n</ul>\n<p><strong>说明：</strong></p>\n<p><strong>可以设置开机时启动 mysql 服务，避免每次开机启动 mysql</strong></p>\n<ul>\n<li><strong>systemctl <mark>enable</mark> mysqld 开机启动 mysql 服务</strong></li>\n</ul>\n<p><strong>前提：使用 netstat 命令，需要提前导入<mark> yum install net-tools</mark></strong></p>\n<hr />\n<ul>\n<li><strong>netstat-tunlp  查看已经启动的服务</strong></li>\n<li><strong>netstat-tunlp|grepmysql</strong></li>\n<li><strong>ps -ef|grep mysql  查看 mysql 进程</strong></li>\n</ul>\n<h4 id=\"3查阅临时密码\"><a class=\"anchor\" href=\"#3查阅临时密码\">#</a> （3）查阅临时密码</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903222746403.png\" alt=\"image-20240903222746403\" style=\"zoom: 67%;\" />\n<h4 id=\"4修改密码开放访问权限\"><a class=\"anchor\" href=\"#4修改密码开放访问权限\">#</a> （4）修改密码，开放访问权限</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903222835076.png\" alt=\"image-20240903222835076\" /></p>\n<p><strong>登录 MySQL，修改密码，开放访问权限</strong></p>\n<ul>\n<li><strong>mysql -uroot -p  登录 mysql（使用临时密码登录）</strong></li>\n</ul>\n<p><strong>修改密码</strong></p>\n<ul>\n<li><strong>set global validate_password_length=4;  设置密码长度最低位数</strong></li>\n<li><strong>set global validate_password_policy=LOW;  设置密码安全等级低，便于密码可以修改成 root</strong></li>\n<li><strong>set password = password ('root');  设置密码为 root</strong></li>\n</ul>\n<p><strong><mark>开启访问权限</mark></strong></p>\n<ul>\n<li>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>grant all on *.* to <span class=\"token string\">'root'</span>@<span class=\"token string\">'%'</span> identified by<span class=\"token string\">'root'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#允许外部访问 mysql</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--code￼7--<span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n</ul>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903223218629.png\" alt=\"image-20240903223218629\" /></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903230020929.png\" alt=\"image-20240903230020929\" style=\"zoom:50%;\" />\n<h3 id=\"6-安装git\"><a class=\"anchor\" href=\"#6-安装git\">#</a> 6、安装 Git</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904145219238.png\" alt=\"image-20240904145219238\" style=\"zoom:80%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904145252060.png\" alt=\"image-20240904145252060\" style=\"zoom:67%;\" />\n<h3 id=\"7-安装maven\"><a class=\"anchor\" href=\"#7-安装maven\">#</a> 7、安装 Maven</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904145324328.png\" alt=\"image-20240904145324328\" style=\"zoom: 80%;\" />\n<p><strong>tar-zxvfapache-maven-3.5.4-bin.tar.gz-C/usr/local</strong></p>\n<p><strong>vim/etc/profile  修改配置文件，加入如下内容</strong></p>\n<ul>\n<li><strong>export MAVEN_HOME=/usr/local/apache-maven-3.5.4</strong></li>\n<li><strong>export PATH=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mi>A</mi><mi>V</mi><msub><mi>A</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant=\"normal\">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">JAVA_HOME/bin:</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span></span>MAVEN_HOME/bin:$PATH</strong></li>\n<li><strong>source/etc/profile</strong></li>\n</ul>\n<p><strong>mvn -version  查看 maven 版本</strong></p>\n<p><strong><mark>修改配置文件</mark>内容如下</strong></p>\n<p>**vim /usr/local/apache-maven-3.5.4/conf/settings.xml  **</p>\n<p><strong><mark>指定 Maven 以后依赖保存的本地仓库</mark></strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;localRepository&gt;/usr/local/repo&lt;/localRepository&gt; #指定Maven以后依赖保存的本地仓库</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-安装nginx\"><a class=\"anchor\" href=\"#8-安装nginx\">#</a> 8、安装 Nginx</h3>\n<h5 id=\"1-前言\"><a class=\"anchor\" href=\"#1-前言\">#</a> <strong>① 前言</strong></h5>\n<p>Nginx 是一款卓越的高性能 Web 服务器，被广泛用于托管网站和应用程序。本文旨在为您提供详细的指南，帮助您在 Linux 系统上成功安装、配置和启动 Nginx 服务器。通过这一过程，您将了解如何将 Nginx 集成到您的系统中，以便轻松地托管您的网站和应用程序。</p>\n<h5 id=\"2-安装依赖项\"><a class=\"anchor\" href=\"#2-安装依赖项\">#</a> <strong>② 安装依赖项</strong></h5>\n<p>在开始安装 Nginx 之前，首先需要安装一些依赖项，以确保 Nginx 编译和运行正常。打开终端并执行以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y wget gcc-c++ pcre-devel zlib-devel openssl-devel</span><br></pre></td></tr></table></figure>\n<p>这将安装必要的工具和库，以支持 Nginx 的编译和运行。</p>\n<h5 id=\"3下载nginx\"><a class=\"anchor\" href=\"#3下载nginx\">#</a> <strong>③下载 Nginx</strong></h5>\n<p>从 Nginx 官网下载最新的稳定版本。您可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG93bmxvYWQuaHRtbA==\"> https://nginx.org/en/download.html</span> 上找到最新版本的下载链接。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905165019611.png\" alt=\"image-20240905165019611\" style=\"zoom:67%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">例如，下载Nginx 1.24.0版本</span></span><br><span class=\"line\">wget https://nginx.org/download/nginx-1.24.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p><strong>创建一个文件夹</strong></p>\n<ul>\n<li>\n<p>cd /usr/local</p>\n</li>\n<li>\n<p>mkdir nginx</p>\n</li>\n<li>\n<p>cd nginx</p>\n</li>\n</ul>\n<p><strong>解压 Nginx</strong></p>\n<p>解压下载的 Nginx 源代码包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.24.0.tar.gz -C /usr/local/nginx</span><br></pre></td></tr></table></figure>\n<p><strong>编译和安装</strong></p>\n<p>进入解压后的 Nginx 目录并进行编译和安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">切换到 Nginx 解压目录</span></span><br><span class=\"line\">cd /usr/local/nginx/nginx-1.24.0</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译前的配置和依赖检查,考虑到后续安装ssl证书(https)、http 添加两个模块</span></span><br><span class=\"line\">./configure --with-http_stub_status_module --with-http_ssl_module</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译安装</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>Nginx 安装完成后，默认自动创建  <code>/usr/local/nginx</code>  目录，并创建必要的文件和目录，包括配置文件、日志文件、HTML 文件等。</p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905165148247.png\" alt=\"image-20240905165148247\" /></p>\n<h5 id=\"4-配置nginx环境变量\"><a class=\"anchor\" href=\"#4-配置nginx环境变量\">#</a> ④ 配置 nginx 环境变量</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NGINX_HOME=/usr/local/nginx</span><br><span class=\"line\">export PATH=$PATH:$NGINX_HOME/sbin </span><br></pre></td></tr></table></figure>\n<h5 id=\"5-重新加载配置文件\"><a class=\"anchor\" href=\"#5-重新加载配置文件\">#</a> ⑤ 重新加载配置文件</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-启动nginx\"><a class=\"anchor\" href=\"#6-启动nginx\">#</a> ⑥ 启动 Nginx</h5>\n<p>进入 Nginx 的安装目录：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin</span><br></pre></td></tr></table></figure>\n<p>然后，启动 Nginx 服务器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905201004088.png\" alt=\"image-20240905201004088\" style=\"zoom: 50%;\" />\n<p>您现在可以通过浏览器访问您的服务器的 IP 地址或域名来验证 Nginx 是否正常工作。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905165429147.png\" alt=\"image-20240905165429147\" style=\"zoom:67%;\" />\n<h3 id=\"9-lrzsz-图形化上传文件工具finallshell已自带\"><a class=\"anchor\" href=\"#9-lrzsz-图形化上传文件工具finallshell已自带\">#</a> 9、lrzsz <mark>图形化上传文件</mark>工具 (finallshell 已自带)</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用 rz命令进行图形化的文件上传</span></span><br></pre></td></tr></table></figure>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903230629411.png\" alt=\"image-20240903230629411\" style=\"zoom:80%;\" />\n<h5 id=\"使用rz命令进行图形化的文件上传\"><a class=\"anchor\" href=\"#使用rz命令进行图形化的文件上传\">#</a> 使用<mark> rz</mark> 命令进行<mark>图形化</mark>的文件上传</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903230848047.png\" alt=\"image-20240903230848047\" style=\"zoom:50%;\" />\n<h2 id=\"七-项目部署\"><a class=\"anchor\" href=\"#七-项目部署\">#</a> 七、项目部署</h2>\n<h3 id=\"1-手工部署-后端\"><a class=\"anchor\" href=\"#1-手工部署-后端\">#</a> 1、手工部署 - 后端</h3>\n<h4 id=\"1在idea中开发springboot项目并打成jar包\"><a class=\"anchor\" href=\"#1在idea中开发springboot项目并打成jar包\">#</a> （1）在 IDEA 中开发 SpringBoot 项目并打成 jar 包</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232027851.png\" alt=\"image-20240903232027851\" style=\"zoom: 67%;\" />\n<h4 id=\"2将jar包上传到linux服务器\"><a class=\"anchor\" href=\"#2将jar包上传到linux服务器\">#</a> （2）将 jar 包上传到 Linux 服务器</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232057598.png\" alt=\"image-20240903232057598\" style=\"zoom:67%;\" />\n<h4 id=\"3启动springboot程序\"><a class=\"anchor\" href=\"#3启动springboot程序\">#</a> （3）启动 SpringBoot 程序</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232115960.png\" alt=\"image-20240903232115960\" /></p>\n<h4 id=\"4检查防火墙确保8080端口对外开放访问springboot项目\"><a class=\"anchor\" href=\"#4检查防火墙确保8080端口对外开放访问springboot项目\">#</a> （4）检查防火墙，确保 8080 端口对外开放，访问 SpringBoot 项目</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232135174.png\" alt=\"image-20240903232135174\" style=\"zoom:80%;\" />\n<h4 id=\"5改为后台运行springboot程序并将日志输出到日志文件\"><a class=\"anchor\" href=\"#5改为后台运行springboot程序并将日志输出到日志文件\">#</a> （5）改为后台运行 SpringBoot 程序，并将日志输出到日志文件</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232154494.png\" alt=\"image-20240903232154494\" /></p>\n<p><strong>改为后台运行 SpringBoot 程序，并将日志输出到日志文件</strong></p>\n<p><strong>目前程序运行的问题</strong></p>\n<ul>\n<li><strong>线上程序不会采用控制台霸屏的形式运行程序，而是将程序在后台运行</strong></li>\n<li><strong>线上程序不会将日志输出到控制台，而是输出到日志文件，方便运维查阅信息</strong></li>\n</ul>\n<p><strong>nohup 命令：英文全称 nohangup（不挂起），用于不挂断地运行指定命令，退出终端不会影响程序的运行</strong></p>\n<p><strong>语法格式：nohup Command [Arg...] [&amp;]</strong></p>\n<p><strong>参数说明：</strong></p>\n<ul>\n<li><strong>Command：要执行的命令</strong></li>\n<li><strong>Arg：一些参数，可以指定输出文件</strong></li>\n<li><strong>&amp;：让命令在后台运行</strong></li>\n</ul>\n<p><strong>举例：hello.log 为日志文件</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohupjava -jar springboot工程.jar &amp;&gt; hello.log &amp;</span><br></pre></td></tr></table></figure>\n<p><strong>nohupjava -jar boot 工程.jar &amp;&gt;hello.log&amp; 后台运行 java-jar 命令，并将日志输出到 hello.log 文件</strong></p>\n<h4 id=\"6停止springboot程序\"><a class=\"anchor\" href=\"#6停止springboot程序\">#</a> （6）停止 SpringBoot 程序</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240903232638267.png\" alt=\"image-20240903232638267\" /></p>\n<h3 id=\"2-shell脚本自动部署-后端\"><a class=\"anchor\" href=\"#2-shell脚本自动部署-后端\">#</a> 2、Shell 脚本自动部署 - 后端</h3>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904143357477.png\" alt=\"image-20240904143357477\" /></p>\n<h4 id=\"1安装git\"><a class=\"anchor\" href=\"#1安装git\">#</a> （1）安装 Git</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904145219238.png\" alt=\"image-20240904145219238\" style=\"zoom:80%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904145252060.png\" alt=\"image-20240904145252060\" style=\"zoom:67%;\" />\n<h4 id=\"2安装maven\"><a class=\"anchor\" href=\"#2安装maven\">#</a> （2）安装 Maven</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904145324328.png\" alt=\"image-20240904145324328\" style=\"zoom: 80%;\" />\n<p><strong>tar-zxvfapache-maven-3.5.4-bin.tar.gz-C/usr/local</strong></p>\n<p><strong>vim/etc/profile  修改配置文件，加入如下内容</strong></p>\n<ul>\n<li><strong>export MAVEN_HOME=/usr/local/apache-maven-3.5.4</strong></li>\n<li><strong>export PATH=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mi>A</mi><mi>V</mi><msub><mi>A</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant=\"normal\">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">JAVA_HOME/bin:</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span></span>MAVEN_HOME/bin:$PATH</strong></li>\n<li><strong>source/etc/profile</strong></li>\n</ul>\n<p><strong>mvn -version  查看 maven 版本</strong></p>\n<p><strong><mark>修改配置文件</mark>内容如下</strong></p>\n<p>**vim /usr/local/apache-maven-3.5.4/conf/settings.xml  **</p>\n<p><strong><mark>指定 Maven 以后依赖保存的本地仓库</mark></strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;localRepository&gt;/usr/local/repo&lt;/localRepository&gt; #指定Maven以后依赖保存的本地仓库</span><br></pre></td></tr></table></figure>\n<h4 id=\"3编写shell脚本拉取代码-编译-打包-启动\"><a class=\"anchor\" href=\"#3编写shell脚本拉取代码-编译-打包-启动\">#</a> （3）编写 Shell 脚本 (拉取代码、编译、打包、启动)</h4>\n<p><strong>在 /usr/local/sh 目录下，将 shell 脚本文件加入到该目录中</strong></p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904150018801.png\" alt=\"image-20240904150018801\" /></p>\n<p><strong>shell 脚本（需要根据自己的项目，<mark>自定义配置</mark>）</strong></p>\n<ul>\n<li><strong><mark>APP_NAME</mark></strong></li>\n<li><strong>存放 Git 拉取后的<mark>项目位置</mark>，cd /usr/local/helloworld</strong></li>\n<li><strong>启动项目的<mark> jar 包</mark>和存放<mark>实时日志文件</mark>的位置即文件名，nohup java -jar helloworld-1.0-SNAPSHOT.jar &amp;&gt; helloworld.log &amp;</strong></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> =================================</span><br><span class=\"line\"><span class=\"built_in\">echo</span>  自动化部署脚本启动</span><br><span class=\"line\"><span class=\"built_in\">echo</span> =================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 停止原来运行中的工程</span><br><span class=\"line\">APP_NAME=helloworld</span><br><span class=\"line\"></span><br><span class=\"line\">tpid=`ps -ef|grep <span class=\"variable\">$APP_NAME</span>|grep -v grep|grep -v <span class=\"built_in\">kill</span>|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;tpid&#125;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;Stop Process...&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">kill</span> -15 <span class=\"variable\">$tpid</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">sleep</span> 2</span><br><span class=\"line\">tpid=`ps -ef|grep <span class=\"variable\">$APP_NAME</span>|grep -v grep|grep -v <span class=\"built_in\">kill</span>|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;tpid&#125;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;Kill Process!&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">kill</span> -9 <span class=\"variable\">$tpid</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;Stop Success!&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 准备从Git仓库拉取最新代码</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/helloworld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 开始从Git仓库拉取最新代码</span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 代码拉取完成</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 开始打包</span><br><span class=\"line\">output=`mvn clean package -Dmaven.test.skip=<span class=\"literal\">true</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 启动项目</span><br><span class=\"line\"><span class=\"built_in\">nohup</span> java -jar helloworld-1.0-SNAPSHOT.jar &amp;&gt; helloworld.log &amp;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 项目启动完成</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong><mark>可以遇到的问题：</mark></strong></p>\n<ul>\n<li>\n<p><strong> <code>$'\\r': 未找到命令</code> </strong>：这通常是因为脚本文件中包含了 Windows 风格的换行符（ <code>CRLF</code> ）而不是 Unix 风格的换行符（ <code>LF</code> ）。Unix 系统要求换行符为 LF，而 Windows 使用 CRLF。如果脚本是从 Windows 环境中复制或编辑的，可能会出现这个问题。</p>\n<ul>\n<li>如果你的系统没有安装  <code>dos2unix</code> ，你可以用 <mark> <code>sed</code>  命令</mark>来修复：</li>\n</ul>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i <span class=\"string\">&#x27;s/\\r$//&#x27;</span> sky-<span class=\"keyword\">take</span>-<span class=\"keyword\">out</span>.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong> <code>语法错误: 未预期的文件结尾</code> </strong>：这可能是因为文件末尾的换行符问题，或者脚本文件中有其他格式问题导致的。也有可能是因为有一些未闭合的结构，比如  <code>if</code>  语句没有正确结束。</p>\n<ul>\n<li>确保脚本中的每个  <code>if</code> 、 <code>for</code> 、 <code>while</code>  语句都有正确的结束标记。例如，确保  <code>if</code>  语句后面有  <code>fi</code> 。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4为用户授予执行shell脚本的权限\"><a class=\"anchor\" href=\"#4为用户授予执行shell脚本的权限\">#</a> （4）为用户授予执行 Shell 脚本的权限</h4>\n<h5 id=\"1文件权限\"><a class=\"anchor\" href=\"#1文件权限\">#</a> ①文件权限</h5>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904150444220.png\" alt=\"image-20240904150444220\" /></p>\n<p><strong><mark>chmod</mark>（英文全拼：changemode）命令是控制用户对文件的权限的命令</strong></p>\n<ul>\n<li><strong>Linux 中的权限分为：读 (r)、写 (w)、执行 (x) 三种权限</strong></li>\n<li><strong>Linux 的文件调用权限分为三级：<mark>文件所有者</mark>（Owner）、<mark>用户组</mark>（Group）、<mark>其它用户</mark>（OtherUsers）</strong></li>\n<li><strong>只有文件的 == 所有者和超级用户 (root)== 可以修改文件或目录的权限</strong></li>\n<li><strong>要执行 ShelL 脚本需要有对此脚本文件的<mark>执行权限</mark>，如果没有则不能执行</strong></li>\n</ul>\n<h5 id=\"1为用户授权\"><a class=\"anchor\" href=\"#1为用户授权\">#</a> ①为用户授权</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904151304576.png\" alt=\"image-20240904151304576\" style=\"zoom: 80%;\" />\n<ul>\n<li>\n<p><strong>除了第一位使用 ==- 或者 d<mark> 来区分该文件时</mark>目录还是文件 ==</strong></p>\n</li>\n<li>\n<p><strong>将之后的九位数，划分为三组，通过 0<sub>7(000</sub>111) 的八进制数来代表授予每组的权限</strong></p>\n</li>\n<li>\n<p><strong>注意：三位数字分别代表不同用户的权限</strong></p>\n<ul>\n<li><strong>第 1 位表示<mark>文件拥有者</mark>的权限</strong></li>\n<li><strong>第 2 位表示<mark>同组用户</mark>的权限</strong></li>\n<li><strong>第 3 位表示<mark>其他用户</mark>的权限</strong></li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904150725763.png\" alt=\"image-20240904150725763\" /></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904151600417.png\" alt=\"image-20240904151600417\" style=\"zoom:80%;\" />\n<h4 id=\"5执行shell脚本\"><a class=\"anchor\" href=\"#5执行shell脚本\">#</a> （5）执行 Shell 脚本</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904151754547.png\" alt=\"image-20240904151754547\" style=\"zoom:80%;\" />\n<h4 id=\"6设置静态ip\"><a class=\"anchor\" href=\"#6设置静态ip\">#</a> （6）设置静态 ip</h4>\n<p><strong>为了防止<mark>每次重新启动虚拟机</mark>，让 ip 地址发生变化，导致网站的 ip 地址不确定，需要设置虚拟机的 ip 为<mark>静态 ip</mark></strong></p>\n<h5 id=\"1设置静态ip\"><a class=\"anchor\" href=\"#1设置静态ip\">#</a> ①设置静态 ip</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904151507650.png\" alt=\"image-20240904151507650\" /></p>\n<p><strong><mark>注意：修改后的静态 ip、网关、DNS 服务器的网段需要和此处保持一致，即 192.168.138.xx</mark></strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOTPROTO=&quot;static&quot;  #使用静态IP地址，默认为dhcp</span><br><span class=\"line\">IPADDR=&quot;192.168.138.100&quot; #设置的静态IP地址</span><br><span class=\"line\">NETMASK=&quot;255.255.255.0&quot;  #子网掩码</span><br><span class=\"line\">GATEWAY=&quot;192.168.138.2&quot;  #网关地址</span><br><span class=\"line\">DNS1=&quot;192.168.138.2&quot;  #DNS服务器</span><br></pre></td></tr></table></figure>\n<h5 id=\"2重启网络服务\"><a class=\"anchor\" href=\"#2重启网络服务\">#</a> ②重启网络服务</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n<p><strong><mark>注意：重启完网络服务后 ip 地址已经发生了改变，此时 FinalShell 已经连接不上 Linux 系统，需要创建一个新连接才能连接到 Linux。</mark></strong></p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240904152400011.png\" alt=\"image-20240904152400011\" /></p>\n<h3 id=\"3-部署架构-前后端客户端-主从数据库-redis\"><a class=\"anchor\" href=\"#3-部署架构-前后端客户端-主从数据库-redis\">#</a> 3、部署架构 - 前后端，客户端、主从数据库、Redis</h3>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905202404025.png\" alt=\"image-20240905202404025\" style=\"zoom:80%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905202420884.png\" alt=\"image-20240905202420884\" style=\"zoom:50%;\" />\n<h4 id=\"1安装配置启停-nginx\"><a class=\"anchor\" href=\"#1安装配置启停-nginx\">#</a> （1）安装 / 配置 / 启停 Nginx</h4>\n<h5 id=\"1-前言-2\"><a class=\"anchor\" href=\"#1-前言-2\">#</a> <strong>① 前言</strong></h5>\n<p>Nginx 是一款卓越的高性能 Web 服务器，被广泛用于托管网站和应用程序。本文旨在为您提供详细的指南，帮助您在 Linux 系统上成功安装、配置和启动 Nginx 服务器。通过这一过程，您将了解如何将 Nginx 集成到您的系统中，以便轻松地托管您的网站和应用程序。</p>\n<h5 id=\"2-安装依赖项-2\"><a class=\"anchor\" href=\"#2-安装依赖项-2\">#</a> <strong>② 安装依赖项</strong></h5>\n<p>在开始安装 Nginx 之前，首先需要安装一些依赖项，以确保 Nginx 编译和运行正常。打开终端并执行以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y wget gcc-c++ pcre-devel zlib-devel openssl-devel</span><br></pre></td></tr></table></figure>\n<p>这将安装必要的工具和库，以支持 Nginx 的编译和运行。</p>\n<h5 id=\"3下载nginx-2\"><a class=\"anchor\" href=\"#3下载nginx-2\">#</a> <strong>③下载 Nginx</strong></h5>\n<p>从 Nginx 官网下载最新的稳定版本。您可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG93bmxvYWQuaHRtbA==\"> https://nginx.org/en/download.html</span> 上找到最新版本的下载链接。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905165019611.png\" alt=\"image-20240905165019611\" style=\"zoom:67%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">例如，下载Nginx 1.24.0版本</span></span><br><span class=\"line\">wget https://nginx.org/download/nginx-1.24.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p><strong>创建一个文件夹</strong></p>\n<ul>\n<li>\n<p>cd /usr/local</p>\n</li>\n<li>\n<p>mkdir nginx</p>\n</li>\n<li>\n<p>cd nginx</p>\n</li>\n</ul>\n<p><strong>解压 Nginx</strong></p>\n<p>解压下载的 Nginx 源代码包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.24.0.tar.gz -C /usr/local/nginx</span><br></pre></td></tr></table></figure>\n<p><strong>编译和安装</strong></p>\n<p>进入解压后的 Nginx 目录并进行编译和安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">切换到 Nginx 解压目录</span></span><br><span class=\"line\">cd /usr/local/nginx/nginx-1.24.0</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译前的配置和依赖检查,考虑到后续安装ssl证书(https)、http 添加两个模块</span></span><br><span class=\"line\">./configure --with-http_stub_status_module --with-http_ssl_module</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译安装</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>Nginx 安装完成后，默认自动创建  <code>/usr/local/nginx</code>  目录，并创建必要的文件和目录，包括配置文件、日志文件、HTML 文件等。</p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905165148247.png\" alt=\"image-20240905165148247\" /></p>\n<h5 id=\"4-配置nginx环境变量-2\"><a class=\"anchor\" href=\"#4-配置nginx环境变量-2\">#</a> ④ 配置 nginx 环境变量</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NGINX_HOME=/usr/local/nginx</span><br><span class=\"line\">export PATH=$PATH:$NGINX_HOME/sbin </span><br></pre></td></tr></table></figure>\n<h5 id=\"5-重新加载配置文件-2\"><a class=\"anchor\" href=\"#5-重新加载配置文件-2\">#</a> ⑤ 重新加载配置文件</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-启动nginx-2\"><a class=\"anchor\" href=\"#6-启动nginx-2\">#</a> ⑥ 启动 Nginx</h5>\n<p>进入 Nginx 的安装目录：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin</span><br></pre></td></tr></table></figure>\n<p>然后，启动 Nginx 服务器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905201004088.png\" alt=\"image-20240905201004088\" style=\"zoom: 50%;\" />\n<p>您现在可以通过浏览器访问您的服务器的 IP 地址或域名来验证 Nginx 是否正常工作。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905165429147.png\" alt=\"image-20240905165429147\" style=\"zoom:67%;\" />\n<h5 id=\"配置nginxconf打开配置文件\"><a class=\"anchor\" href=\"#配置nginxconf打开配置文件\">#</a> <mark>配置 nginx.conf=&gt; 打开配置文件</mark></h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905200715948.png\" alt=\"image-20240905200715948\" style=\"zoom:50%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n<p>将端口号改成 8089 (随便挑个端口)，因为可能 apeache 占用 80 端口，apeache 端口尽量不要修改，我们选择修改 nginx 端口。</p>\n<p>将 localhost 修改为你服务器的公网 ip 地址。</p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905175330977.png\" alt=\"image-20240905175330977\" /></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">user  nobody;  <span class=\"comment\">#指定 Nginx 进程以哪个用户的身份运行，通常会设置为非特权用户以增强安全性。被注释掉了，默认运行用户可能是 nginx 或 www-data。</span></span></span><br><span class=\"line\">worker_processes  1;  #指定 Nginx 使用的工作进程数量。一般根据 CPU 核心数设置，1 是最基本的配置。</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log;   <span class=\"comment\">#指定错误日志文件的位置和日志级别。被注释掉了，默认的错误日志级别和位置会被使用。</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log  notice;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log  info;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">pid        logs/nginx.pid;  <span class=\"comment\">#指定 Nginx 进程 ID 文件的位置。被注释掉了，默认位置可能是 /var/run/nginx.pid。</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;  #每个工作进程最大可以打开的连接数。设置为 1024，这意味着 Nginx 可以同时处理最多 1024 个连接。</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;  #包含 MIME 类型配置文件，以便为响应设置适当的 Content-Type。</span><br><span class=\"line\">    default_type  application/octet-stream;  #设置默认 MIME 类型为 application/octet-stream，通常用于未指定类型的文件。</span><br><span class=\"line\"></span><br><span class=\"line\">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class=\"line\">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class=\"line\">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">    #access_log  logs/access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;  #启用高效的文件传输。</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\"></span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;  #设置客户端与服务器之间的持久连接超时时间为 65 秒。</span><br><span class=\"line\"></span><br><span class=\"line\">    #gzip  on;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tmap $http_upgrade $connection_upgrade&#123;  #配置 WebSocket 连接的升级机制。</span><br><span class=\"line\">\t\tdefault upgrade;</span><br><span class=\"line\">\t\t&#x27;&#x27; close;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用upstream指令配置后端服务器组</span></span><br><span class=\"line\">\tupstream webservers&#123;  #定义了一个名为 webservers 的负载均衡后端服务器组</span><br><span class=\"line\"><span class=\"meta prompt_\">\t#</span><span class=\"language-bash\">负载均衡</span></span><br><span class=\"line\"></span><br><span class=\"line\">      #本地后端，8080端口</span><br><span class=\"line\"><span class=\"meta prompt_\">\t  #</span><span class=\"language-bash\">server 127.0.0.1:8080 weight=90 ;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      #Linux部署后端</span><br><span class=\"line\">      server 192.168.88.129:9090 weight=90 ;</span><br><span class=\"line\"></span><br><span class=\"line\">      #本地后端，9090端口</span><br><span class=\"line\">      #server 127.0.0.1:9090 weight=90 ;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\">\t  #</span><span class=\"language-bash\">server 127.0.0.1:8088 weight=10 ;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen    80;  #监听 80 端口的 HTTP 请求</span><br><span class=\"line\">        server_name  localhost;  #指定外部访问的服务器名称为 localhost。</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;  #根路径配置，将请求的根路径指向 html/dist 目录，默认首页是 index.html 和 index.htm。</span><br><span class=\"line\">            root   html/dist;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the static page /50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 反向代理,处理管理端发送的请求</span><br><span class=\"line\">        location /api/ &#123;  #反向代理到 http://webservers/admin/</span><br><span class=\"line\">        \t\t#rewrite ^/api/(.*)$ /$1 break;  #请求 /api/data 会被前端代理重写为 /data，然后在 Nginx 层直接转发到 http://webservers/admin/data。</span><br><span class=\"line\">\t\t\tproxy_pass   http://webservers/admin/;</span><br><span class=\"line\">            #proxy_pass   http://webservers/admin/;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">反向代理,处理用户端发送的请求</span></span><br><span class=\"line\">        location /user/ &#123; #反向代理到 http://webservers/user/</span><br><span class=\"line\">            proxy_pass   http://webservers/user/;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">WebSocket</span></span><br><span class=\"line\">\t\tlocation /ws/ &#123;  #处理 WebSocket 连接，设置 proxy_http_version 1.1 和其他 WebSocket 特定的头部。</span><br><span class=\"line\">            proxy_pass   http://webservers/ws/;</span><br><span class=\"line\">\t\t\tproxy_http_version 1.1;</span><br><span class=\"line\">\t\t\tproxy_read_timeout 3600s;</span><br><span class=\"line\">\t\t\tproxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">\t\t\tproxy_set_header Connection &quot;$connection_upgrade&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class=\"line\">        #</span><br><span class=\"line\">        #location ~ \\.php$ &#123;</span><br><span class=\"line\">        #    root           html;</span><br><span class=\"line\">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class=\"line\">        #    fastcgi_index  index.php;</span><br><span class=\"line\">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class=\"line\">        #    include        fastcgi_params;</span><br><span class=\"line\">        #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class=\"line\">        # concurs with nginx&#x27;s one</span><br><span class=\"line\">        #</span><br><span class=\"line\">        #location ~ /\\.ht &#123;</span><br><span class=\"line\">        #    deny  all;</span><br><span class=\"line\">        #&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class=\"line\">    #</span><br><span class=\"line\">    #server &#123;</span><br><span class=\"line\">    #    listen       8000;</span><br><span class=\"line\">    #    listen       somename:8080;</span><br><span class=\"line\">    #    server_name  somename  alias  another.alias;</span><br><span class=\"line\"></span><br><span class=\"line\">    #    location / &#123;</span><br><span class=\"line\">    #        root   html;</span><br><span class=\"line\">    #        index  index.html index.htm;</span><br><span class=\"line\">    #    &#125;</span><br><span class=\"line\">    #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # HTTPS server</span><br><span class=\"line\">    #</span><br><span class=\"line\">    #server &#123;</span><br><span class=\"line\">    #    listen       443 ssl;</span><br><span class=\"line\">    #    server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">    #    ssl_certificate      cert.pem;</span><br><span class=\"line\">    #    ssl_certificate_key  cert.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class=\"line\">    #    ssl_session_timeout  5m;</span><br><span class=\"line\"></span><br><span class=\"line\">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class=\"line\">    #    ssl_prefer_server_ciphers  on;</span><br><span class=\"line\"></span><br><span class=\"line\">    #    location / &#123;</span><br><span class=\"line\">    #        root   html;</span><br><span class=\"line\">    #        index  index.html index.htm;</span><br><span class=\"line\">    #    &#125;</span><br><span class=\"line\">    #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"7-停止nginx\"><a class=\"anchor\" href=\"#7-停止nginx\">#</a> ⑦ 停止 Nginx</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">寻找Nginx进程</span></span><br><span class=\"line\">ps -ef | grep nginx</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">杀死Nginx进程</span></span><br><span class=\"line\">kill -9 78879</span><br></pre></td></tr></table></figure>\n<h5 id=\"8-防火墙设置\"><a class=\"anchor\" href=\"#8-防火墙设置\">#</a> ⑧ 防火墙设置</h5>\n<p>如果您的系统启用了防火墙，需要<strong>关闭防火墙</strong>或者 **<mark> 开发相应的端口</mark> **</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看防火墙状态</span></span><br><span class=\"line\">systemctl status firewalld</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">关闭防火墙</span></span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">开机禁用防火墙</span></span><br><span class=\"line\">systemctl disable firewalld</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">开放Nginx的80端口</span></span><br><span class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload  #开放或者关闭端口后==需要执行立即生效命令</span><br><span class=\"line\">firewall-cmd --zone=public --list-ports  #查看开放的端口</span><br></pre></td></tr></table></figure>\n<h4 id=\"2前端-nginx部署\"><a class=\"anchor\" href=\"#2前端-nginx部署\">#</a> （2）前端 - Nginx 部署</h4>\n<h5 id=\"1前端打包成dist\"><a class=\"anchor\" href=\"#1前端打包成dist\">#</a> ①前端打包成 dist</h5>\n<p><strong>终端输入，打包获得 dist 目录文件</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905201142120.png\" alt=\"image-20240905201142120\" style=\"zoom:50%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905201241901.png\" alt=\"image-20240905201241901\" style=\"zoom:50%;\" />\n<h5 id=\"上传到服务端\"><a class=\"anchor\" href=\"#上传到服务端\">#</a> 上传到服务端</h5>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905201449911.png\" alt=\"image-20240905201449911\" style=\"zoom:50%;\" />\n<h5 id=\"2websocket请求路径错误\"><a class=\"anchor\" href=\"#2websocket请求路径错误\">#</a> ②WebSocket 请求路径错误</h5>\n<p><strong>VUE_APP_SOCKET_URL = 'ws://192.168.88.130:80'</strong></p>\n<p><strong>这里是 WebSocket 的地址，Nginx 会反向代理到后端，</strong><br />\n<strong> 需要注意的是，这里的 url<mark> 不能写为 ws://192.168.88.129:9090/ws/</mark>，否则会导致 WebSocket 连接失败，需要在使用的时候再去<mark>拼接 '/ws/'</mark>，</strong></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905223422534.png\" alt=\"image-20240905223422534\" style=\"zoom:67%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Base api</span></span><br><span class=\"line\">VUE_APP_BASE_API = &#x27;/api&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">统一前缀,<span class=\"string\">&#x27;/api&#x27;</span> http://localhost:8080/api</span></span><br><span class=\"line\"></span><br><span class=\"line\">NODE_ENV = &#x27;development&#x27;</span><br><span class=\"line\">VUE_APP_NODE_ENV = &#x27;dev&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">//后端服务的地址</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">VUE_APP_URL = <span class=\"string\">&#x27;http://localhost:8080/admin&#x27;</span></span></span><br><span class=\"line\">VUE_APP_URL = &#x27;http://192.168.88.129:9090/admin&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">VUE_APP_SOCKET_URL = <span class=\"string\">&#x27;ws://localhost:8080/ws/&#x27;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">VUE_APP_SOCKET_URL = &#x27;ws://192.168.88.130:80&#x27; #这里是WebSocket的地址,Nginx会反向代理到后端,</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">需要注意的是,这里的url不能写为ws://192.168.88.129:9090/ws/，否则会导致WebSocket连接失败，需要在使用的时候再去拼接<span class=\"string\">&#x27;/ws/&#x27;</span>，</span></span><br><span class=\"line\"></span><br><span class=\"line\">//VUE_APP_SOCKET_URL = &#x27;ws://http://23ce4dbd.cpolar.cn/ws/&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">VUE_CLI_BABEL_TRANSPILE_MODULES = true</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除权限 <span class=\"literal\">true</span>/有</span></span><br><span class=\"line\">VUE_APP_DELETE_PERMISSIONS = true</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"三-mysql的主从复制数据库的读写分离\"><a class=\"anchor\" href=\"#三-mysql的主从复制数据库的读写分离\">#</a> 三、(MySQL 的<mark>主从复制</mark>) 数据库的读写分离</h2>\n<h3 id=\"1-介绍\"><a class=\"anchor\" href=\"#1-介绍\">#</a> 1、介绍</h3>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905103716596.png\" alt=\"image-20240905103716596\" /></p>\n<p><strong>MySQL 主从复制是一个异步的复制过程，底层是基于 Mysql 数据库自带的<mark>二进制日志功能</mark>。就是一台或多台 MySQL 数据</strong><br />\n<strong>库（<mark>slave</mark>，即从库）从另一台 MySQL 数据库（<mark>master</mark>，即主库）进行日志的<mark>复制</mark>然后再<mark>解析日志并应用到自身</mark>，最</strong><br />\n<strong>终实现从库的数据和主库的数据保持一致。MySQL 主从复制是 MySQL 数据库自带功能，无需借助第三方工具。</strong></p>\n<p><strong>MySQL 复制过程分成三步：</strong></p>\n<ul>\n<li><strong>master 将改变记录到<mark>二进制日志（binarylog)</mark></strong></li>\n<li><strong>slave 将 master 的 binarylog 拷贝到它的<mark>中继日志（relaylog）</mark></strong>\n<ol>\n<li><strong>通过开启 I/O thread 线程从 master 主库中读取 binlog，在写入 slave 从库的中继日志 relaylog。</strong></li>\n<li><strong>在从库中在通过 SQL thread 线程解析日志，执行和主库一样的 sql 操作</strong></li>\n</ol>\n</li>\n<li><strong>slave 重做中继日志中的事件，将改变应用到自己的数据库中</strong></li>\n</ul>\n<h3 id=\"2-配置\"><a class=\"anchor\" href=\"#2-配置\">#</a> 2、配置</h3>\n<h4 id=\"1前置条件\"><a class=\"anchor\" href=\"#1前置条件\">#</a> （1）前置条件</h4>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905104412444.png\" alt=\"image-20240905104412444\" /></p>\n<h5 id=\"1解决-vmware-克隆linux-网卡uuid重复问题\"><a class=\"anchor\" href=\"#1解决-vmware-克隆linux-网卡uuid重复问题\">#</a> ①解决 VMware 克隆 linux 网卡 UUID 重复问题</h5>\n<blockquote>\n<p>2019 年 04 月 06 日<br />\n系统版本：CentOS Linux release 7.6.1810</p>\n</blockquote>\n<p><strong>参考文档</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2F5bmVsaXUwMDcvcC8xMDM4ODQxNy5odG1s\">https://www.cnblogs.com/wayneliu007/p/10388417.html</span></p>\n<hr />\n<p>当我们使用 VMware 克隆 linux 主机时会发生克隆主机和原主机网卡 UUID 重复的问题，这样会对网络通信产生影响。<br />\n只要保证每台主机的 UUID 独一无二即可，即为新的主机绑定新的 UUID。</p>\n<ol>\n<li><strong>生成随机 uuid 号</strong></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uuidgen\t</span></span><br><span class=\"line\">46269697-0bd5-4088-af92-337325daea9e</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>替换 UUID 值</strong></li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vi /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">TYPE</span>=Ethernet</span><br><span class=\"line\"><span class=\"attr\">PROXY_METHOD</span>=none</span><br><span class=\"line\"><span class=\"attr\">BROWSER_ONLY</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">BOOTPROTO</span>=none</span><br><span class=\"line\"><span class=\"attr\">DEFROUTE</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">IPV4_FAILURE_FATAL</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">IPV6INIT</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">IPV6_AUTOCONF</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">IPV6_DEFROUTE</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">IPV6_FAILURE_FATAL</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">IPV6_ADDR_GEN_MODE</span>=stable-privacy</span><br><span class=\"line\"><span class=\"attr\">NAME</span>=ens33</span><br><span class=\"line\"><span class=\"attr\">DEVICE</span>=ens33</span><br><span class=\"line\"><span class=\"attr\">ONBOOT</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">IPV6_PRIVACY</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">IPADDR</span>=<span class=\"number\">192.168</span>.<span class=\"number\">0.11</span></span><br><span class=\"line\"><span class=\"attr\">PREFIX</span>=<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">GATEWAY</span>=<span class=\"number\">192.168</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">DNS1</span>=<span class=\"number\">192.168</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">DNS2</span>=<span class=\"number\">114.114</span>.<span class=\"number\">114.114</span></span><br><span class=\"line\"><span class=\"attr\">UUID</span>=<span class=\"number\">46269697</span>-<span class=\"number\">0</span>bd5-<span class=\"number\">4088</span>-af92-<span class=\"number\">337325</span>daea9e</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>重启网络服务</strong></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># systemctl restart network</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li><strong>验证查看</strong></li>\n</ol>\n<p>此时新主机的网卡 UUID 值设置完毕，可以通过 nmcli 命令查看<br />\n查看网卡 UUID 值</p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># nmcli connection show</span><br><span class=\"line\"><span class=\"keyword\">NAME</span>   UUID                                  <span class=\"keyword\">TYPE</span>      DEVICE </span><br><span class=\"line\">ens33  <span class=\"number\">46269697</span>-<span class=\"number\">0</span>bd5-<span class=\"number\">4088</span>-af92-<span class=\"number\">337325</span>daea9e  ethernet  ens33  </span><br></pre></td></tr></table></figure>\n<p>查看网卡 MAC</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># nmcli device show ens33</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.DEVICE:                         ens33</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.TYPE:                           ethernet</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.HWADDR:                         00:0C:29:BD:FC:FA</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.MTU:                            1500</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.STATE:                          100 (连接的)</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.CONNECTION:                     ens33</span></span><br><span class=\"line\"><span class=\"section\">GENERAL.CON-PATH:                       /org/freedesktop/NetworkManager/ActiveConnection/3</span></span><br><span class=\"line\"><span class=\"section\">WIRED-PROPERTIES.CARRIER:               开</span></span><br><span class=\"line\"><span class=\"section\">IP4.ADDRESS[1]:                         192.168.0.11/24</span></span><br><span class=\"line\"><span class=\"section\">IP4.GATEWAY:                            192.168.0.1</span></span><br><span class=\"line\"><span class=\"section\">IP4.ROUTE[1]:                           dst = 192.168.0.0/24, nh = 0.0.0.0, mt = 100</span></span><br><span class=\"line\"><span class=\"section\">IP4.ROUTE[2]:                           dst = 0.0.0.0/0, nh = 192.168.0.1, mt = 100</span></span><br><span class=\"line\"><span class=\"section\">IP4.DNS[1]:                             192.168.0.1</span></span><br><span class=\"line\"><span class=\"section\">IP4.DNS[2]:                             114.114.114.114</span></span><br><span class=\"line\"><span class=\"section\">IP6.ADDRESS[1]:                         fe80::f5fc:c628:ab36:49a1/64</span></span><br><span class=\"line\"><span class=\"section\">IP6.GATEWAY:                            --</span></span><br><span class=\"line\"><span class=\"section\">IP6.ROUTE[1]:                           dst = fe80::/64, nh = ::, mt = 100</span></span><br><span class=\"line\"><span class=\"section\">IP6.ROUTE[2]:                           dst = ff00::/8, nh = ::, mt = 256, table=255</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2主库-master\"><a class=\"anchor\" href=\"#2主库-master\">#</a> （2）主库 - Master</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find / -name &quot;my.cnf&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log-bin=mysql-bin  #[必须]启用二进制日志</span><br><span class=\"line\">server-id=100  #[必须]服务器唯一ID</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld</span><br></pre></td></tr></table></figure>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905104635992.png\" alt=\"image-20240905104635992\" style=\"zoom: 67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905104811911.png\" alt=\"image-20240905104811911\" style=\"zoom:80%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905105014235.png\" alt=\"image-20240905105014235\" style=\"zoom:80%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT REPLICATION SLAVE ON *.* to&#x27;xiaopeng&#x27;@&#x27;%&#x27;identified by&#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>\n<p>注：上面 SQL 的作用是创建一个<strong>用户</strong> xiaoming，密码为 Root@123456，并且给 xia0ming 用户授予 **<mark>REPLICATION SLAVE 权限</mark><strong>。常用于建立复制时所需要用到的用户权限，也就是</strong><mark> slave 必须被 master 授权，成为具有该权限的用户，才能通过该用户复制</mark> **。</p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905105346000.png\" alt=\"image-20240905105346000\" style=\"zoom: 80%;\" />\n<p><strong><mark>由于主库的二进制日志文件和位置，会因为操作数据库发生变化，后续在从库中需要使用；</mark></strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show master status; #由于主库的二进制日志文件和位置，会因为操作数据库发生变化，后续在从库中需要使用；</span><br></pre></td></tr></table></figure>\n<h4 id=\"3从库-slave\"><a class=\"anchor\" href=\"#3从库-slave\">#</a> （3）从库 - Slave</h4>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905105700199.png\" alt=\"image-20240905105700199\" style=\"zoom: 67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905105753248.png\" alt=\"image-20240905105753248\" style=\"zoom:80%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find / -name &quot;my.cnf&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server-id=101  #[必须]服务器唯一ID</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905105812458.png\" alt=\"image-20240905105812458\" /></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host=&#x27;192.168.138.100&#x27;,master_user=&#x27;xiaopeng&#x27;,master_password=&#x27;123456&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=439;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start slave;</span><br></pre></td></tr></table></figure>\n<p><strong><mark>注意</mark></strong></p>\n<p><img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905110339727.png\" alt=\"image-20240905110339727\" /></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905110403499.png\" alt=\"image-20240905110403499\" style=\"zoom:80%;\" />\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show slave status\\G</span><br></pre></td></tr></table></figure>\n<h4 id=\"4注意事项\"><a class=\"anchor\" href=\"#4注意事项\">#</a> （4）注意事项</h4>\n<h5 id=\"1在从库中使用-show-slave-status-时报错\"><a class=\"anchor\" href=\"#1在从库中使用-show-slave-status-时报错\">#</a> ①在从库中使用 show slave status; 时报错</h5>\n<p><strong>主从复制报错 Fatal error:The slave I/O thread stops because master and slave have equal MySQL server <mark>UUIDs</mark>；</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NuZHMxMjMzMjEvYXJ0aWNsZS9kZXRhaWxzLzExNzkyNTg4MQ==\">主从复制报错 Fatal error:The slave I/O thread stops because master and slave have equal MySQL server UUIDs；_fatal error: master and slave have equal mysql ser-CSDN 博客</span></p>\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905121523722.png\" alt=\"image-20240905121523722\" style=\"zoom:67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905121542643.png\" alt=\"image-20240905121542643\" style=\"zoom: 67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905121615376.png\" alt=\"image-20240905121615376\" style=\"zoom:67%;\" />\n<img data-src=\"https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20240905121627663.png\" alt=\"image-20240905121627663\" style=\"zoom:67%;\" />\n",
            "tags": []
        }
    ]
}